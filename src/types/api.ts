/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/v2/catalog-products": {
    /**
     * Retrieve a list of catalog products
     * @description This endpoint retrieves a list of the products available in Printful's catalog. The list is paginated and can be filtered using various filters. The information returned includes details on how each product can be designed, such as the available placements, techniques, and additional options.
     * For a visual representation of the design data, please see the following diagram:
     * [<img src="images/catalog/design_data_diagram.png#center" width="700"/>](images/catalog/design_data_diagram.png)
     */
    get: operations["getProducts"];
  };
  "/v2/catalog-products/{id}": {
    /**
     * Retrieve a single catalog product
     * @description Returns information about a single specified catalog product. [See catalog product](#tag/Catalog-v2/What-is-a-catalog-product)
     */
    get: operations["getProductById"];
  };
  "/v2/catalog-variants/{id}": {
    /**
     * Retrieve information about specific catalog variant
     * @description Returns information about single specified catalog variant. [See catalog variant](#tag/Catalog-v2/What-is-a-catalog-variant)
     */
    get: operations["getVariantById"];
  };
  "/v2/catalog-products/{id}/catalog-variants": {
    /**
     * Retrieve information about catalog product variants
     * @description Returns information about all catalog variants associated with the specified
     * catalog product. [See catalog variant](#tag/Catalog-v2/What-is-a-catalog-variant)
     */
    get: operations["getProductVariantsById"];
  };
  "/v2/catalog-categories": {
    /**
     * Retrieve a list of catalog categories
     * @description Returns list of all categories that are present in the catalog. The categories specify the type of the product that is associated with it. For example, the category "Men’s T-shirts" indicates that the product is a subgroup of T-shirts specifically targeted at Men.
     * Categories can be used to filter the product list by specific tags [See categories_ids](#operation/getProducts)
     */
    get: operations["getCategories"];
  };
  "/v2/catalog-categories/{id}": {
    /**
     * Retrieve information about specific category
     * @description Returns information about a specific catalog category. The categories specify the type of the product that is associated with it. For example, the category "Men’s T-shirts" indicates that the product is a subgroup of T-shirts specifically targeted at Men.
     * Categories can be used to filter the product list by specific tags [See categories_ids](#operation/getProducts)
     */
    get: operations["getCategoryById"];
  };
  "/v2/catalog-products/{id}/catalog-categories": {
    /**
     * Retrieve a list of catalog product categories
     * @description To retrieve information about a particular category, use this feature. It returns details about a specific catalog category. Categories help identify the type of product associated with them. For instance, the category "Men's T-shirts" denotes that the product is a subgroup of T-shirts intended for men.
     */
    get: operations["getCategoriesByProductId"];
  };
  "/v2/catalog-products/{id}/sizes": {
    /**
     * Retrieve size guide for a catalog product
     * @description Returns information about the size guide for a specific product.
     */
    get: operations["getProductSizeGuideById"];
  };
  "/v2/catalog-products/{id}/prices": {
    /**
     * Retrieve catalog product prices
     * @description Calculates prices for specific catalog product based on selling region and specified currency. Calculations also include Store discounts. Selling region is used to specify product production currency, that is the price that the product is natively manufactured in. Different selling regions might affect the overall price amount. Currency parameter is used only to define the currency that the prices will be displayed in.
     */
    get: operations["getProductPricesById"];
  };
  "/v2/catalog-variants/{id}/prices": {
    /**
     * Retrieve pricing information for the catalog variant
     * @description Return pricing information from a single variant and the parent product
     */
    get: operations["getVariantPricesById"];
  };
  "/v2/catalog-products/{id}/images": {
    /**
     * Retrieve blank images for a catalog product
     * @description This feature helps to fetch blank images for a catalog product. These blank images are always white and semi-transparent and can be colored by the user on the client-side as per the specified color in the `data.color` field. The endpoint allows filtering of the result based on the type of the mockup, the placement, and the color of the product.
     */
    get: operations["getProductImagesById"];
  };
  "/v2/catalog-variants/{id}/images": {
    /**
     * Retrieve blank images for a catalog variant
     * @description Returns images for a specified Variant.
     */
    get: operations["getVariantImagesById"];
  };
  "/v2/catalog-products/{id}/mockup-styles": {
    /**
     * Retrieve catalog product mockup styles
     * @description Returns information about available mockup styles for specified catalog product.
     */
    get: operations["retrieveMockupStylesByProductId"];
  };
  "/v2/catalog-products/{id}/mockup-templates": {
    /**
     * Retrieve catalog product mockup templates
     * @description Returns positional data for specified catalog product mockups. The data from this endpoint could be used
     * to generate your own mockups without the need to use Printful's mockup generator.
     * ![Mockup template](images/mockups/mockup_template.png)
     */
    get: operations["getMockupTemplatesByProductId"];
  };
  "/v2/catalog-products/{id}/availability": {
    /**
     * Retrieve catalog product stock availability
     * @description Provides information about the catalog product stock status. Stock availability is grouped by variants &rarr; techniques &rarr; selling regions.
     */
    get: operations["getProductStockAvailabilityById"];
  };
  "/v2/catalog-variants/{id}/availability": {
    /**
     * Retrieve catalog variant stock availability
     * @description Provides information about the catalog variant stock status. Stock availability is grouped by variants &rarr; techniques &rarr; selling regions.
     */
    get: operations["getVariantStockAvailabilityById"];
  };
  "/v2/orders": {
    /**
     * Get Orders
     * @description Returns paginated Order list
     */
    get: operations["getOrders"];
    /**
     * Create Order
     * @description Creates a new order
     */
    post: operations["createOrder"];
  };
  "/v2/orders/{order_id}": {
    /**
     * Get Order
     * @description Returns Order
     */
    get: operations["getOrder"];
    /**
     * Delete Order
     * @description <div class="alert alert-danger">
     *   <strong>Warning:</strong> The DELETE HTTP method in version 2 of order in the
     *   API will delete the order if the order can be deleted. This is distinct from
     *   version 1 where the DELETE method will actually cancel the order rather than
     *   delete it. Please, keep this in mind if you are migrating to version 2 from
     *   version 1
     * </div>
     *
     * Delete the order if it can be deleted. An order can be deleted if it's status is
     * `draft`, `failed` or `cancelled`. The order must also have not been charged yet
     * and there must be no payments pending.
     */
    delete: operations["deleteOrder"];
    /**
     * Update Order
     * @description Make a partial update of an order.
     */
    patch: operations["updateOrder"];
  };
  "/v2/orders/{order_id}/confirmation": {
    /**
     * Confirm order
     * @description Confirms and returns Order. Orders with pending calculations cannot be confirmed.
     */
    post: operations["confirmOrder"];
  };
  "/v2/orders/{order_id}/order-items": {
    /**
     * Get Order Items
     * @description Returns Order items
     */
    get: operations["getItemsByOrderId"];
    /**
     * Create Order Item
     * @description Creates Item for Order
     */
    post: operations["createItemByOrderId"];
  };
  "/v2/orders/{order_id}/order-items/{order_item_id}": {
    /**
     * Get Order Item
     * @description Returns Order item
     */
    get: operations["getItemById"];
    /**
     * Delete Order Item
     * @description Remove a single item from the order
     */
    delete: operations["deleteItemById"];
    /**
     * Update Order Item
     * @description Make a partial update of an order item. NOTE that the source of the order item can't be changed via a PATCH request, to create an order item from another source you must delete the current one and add a new one.
     */
    patch: operations["updateItem"];
  };
  "/v2/orders/{order_id}/shipments": {
    /**
     * Get Shipments
     * @description Shipments contain information about how and when your orders items will be delivered and fulfilled
     */
    get: operations["getShipments"];
  };
  "/v2/sync-products": {
    /**
     * Get Sync Products
     * @description Get information about all Sync Products of your store.
     */
    get: operations["getSyncProducts"];
    /**
     * Create a Sync Product
     * @description Creates a new Sync Product.
     *
     * <div class="alert alert-danger">
     *   This endpoint is only available for "Manual order platform / API" stores (store type <code>native</code>).
     * </div>
     */
    post: operations["createSyncProduct"];
  };
  "/v2/sync-products/{sync_product_id}": {
    /**
     * Get a Sync Product
     * @description Get information about a single Sync Product.
     */
    get: operations["getSyncProductById"];
    /**
     * Delete a Sync Product
     * @description Deletes a single Sync Product.
     */
    delete: operations["deleteSyncProductById"];
    /**
     * Update a Sync Product
     * @description Make a partial update of a Sync Product. This endpoint allows you to replace all Sync Variants with new ones. If you want to update one or more Sync Variants, [Update a Sync Variant](#tag/Sync-v2/operation/updateSyncVariantInSyncProductById) endpoint should be used instead.
     */
    patch: operations["updateSyncSyncProductById"];
  };
  "/v2/sync-variants/{sync_variant_id}": {
    /**
     * Get a Sync Variant
     * @description Get information about a single Sync Variant.
     */
    get: operations["getSyncVariantById"];
  };
  "/v2/sync-products/{sync_product_id}/sync-variants": {
    /**
     * Get Sync Variants
     * @description Get information about all the sync variants of a specific sync product.
     */
    get: operations["getSyncProductVariants"];
    /**
     * Create a Sync Variant
     * @description Creates a new Sync Variant for an existing Sync Product
     */
    post: operations["createSyncVariant"];
  };
  "/v2/sync-products/{sync_product_id}/sync-variants/{sync_variant_id}": {
    /**
     * Delete a Sync Variant
     * @description Delete a single Sync Variant.
     */
    delete: operations["deleteSyncVariantInSyncProductById"];
    /**
     * Update a Sync Variant
     * @description Make a partial update of a Sync Variant. NOTE that the source of the Sync Variant can't be changed via a PATCH request, to create a Sync Variant from another source you must delete the current one and add a new one.
     */
    patch: operations["updateSyncVariantInSyncProductById"];
  };
  "/v2/mockup-tasks": {
    /**
     * Retrieve Mockup Generator tasks
     * @description Returns result of Mockup Generator tasks
     */
    get: operations["getMockupGeneratorTasks"];
    /**
     * Create Mockup Generator tasks
     * @description Create Mockup Generator tasks
     */
    post: operations["createMockupGeneratorTasks"];
  };
  "/v2/webhooks": {
    /**
     * Get webhook configuration
     * @description Returns a configured webhook URL and a list of webhook event types enabled for the store
     */
    get: operations["getWebhooks"];
    /**
     * Set up webhook configuration
     * @description Use this endpoint to enable a webhook URL for a store and select webhook event types that will be sent to this URL.
     *
     * Note that only one webhook configuration can be active for each private OAuth token or app, calling this method will disable the previous webhook configuration.
     *
     * Setting up the [Catalog stock updated](#operation/catalogStockUpdated) webhook requires passing products (currently only IDs are taken into account).
     *
     * Stock update webhook will only include information for the products specified in the `products` param.
     */
    post: operations["createWebhook"];
    /**
     * Disable webhook support
     * @description Removes the webhook URL and all event types from the store.
     */
    delete: operations["disableWebhook"];
  };
  "/v2/webhooks/{eventType}": {
    /**
     * Get event configuration
     * @description Returns event configuration for store
     */
    get: operations["getWebhookEventConfiguration"];
    /**
     * Set up event configuration
     * @description Use this endpoint to create or replace specific event configuration for a store.
     *
     * Setting up the [Catalog stock updated](#operation/catalogStockUpdated) webhook requires passing products (currently only IDs are taken into account).
     *
     * Stock update webhook will only include information for the products specified in the `products` param.
     */
    post: operations["createWebhookEventConfiguration"];
    /**
     * Disable support for event
     * @description Disables the event for a store and clears its configuration, leaving other webhooks intact.
     */
    delete: operations["disableWebhookEvent"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** @enum {string} */
    TechniqueEnum: "dtg" | "digital" | "cut-sew" | "uv" | "embroidery" | "sublimation" | "dtfilm";
    /**
     * Technique
     * @description Information about the available Product's technique
     */
    Techniques: {
      /**
       * @description Technique key
       * @example embroidery
       */
      key?: string;
      /**
       * @description Technique display name
       * @example Embroidery
       */
      display_name?: string;
      /**
       * @description This is the default product technique
       * @example true
       */
      is_default?: boolean;
    };
    /**
     * CatalogOption
     * @description Catalog option definition
     */
    CatalogOption: {
      /**
       * @description Option identifier
       * @example 3d_puff
       */
      name?: string;
      /** @description Available techniques for option */
      techniques?: string[];
      /**
       * @description Type of accepted value
       * @example boolean
       */
      type?: string;
      /**
       * @description List of available option values.
       * @example [
       *   true,
       *   false
       * ]
       */
      values?: unknown[];
    };
    FileLayer: {
      /**
       * @description File type layer
       * @example file
       */
      type?: string;
      /**
       * @description Possible layer options
       * @example [
       *   {
       *     "name": "3d_puff",
       *     "techniques": [
       *       "embroidery"
       *     ],
       *     "type": "boolean",
       *     "values": [
       *       true,
       *       false
       *     ]
       *   }
       * ]
       */
      layer_options?: components["schemas"]["CatalogOption"][];
    };
    /**
     * DesignPlacement
     * @description Information about the product placements that can be used to specify the design placement
     */
    DesignPlacement: {
      /**
       * @description Name of placement that can be used to place design in a correct spot on a product
       * @example back
       */
      placement?: string;
      /**
       * @description Indicates technique for which the placements are available
       * @example embroidery
       */
      technique?: string;
      /**
       * @description Print area width for that placement
       * @example 1600
       */
      print_area_width?: number;
      /**
       * @description Print area height for that placement
       * @example 2000
       */
      print_area_height?: number;
      /** @description Available layers for that product */
      layers?: components["schemas"]["FileLayer"][];
      /**
       * @description Possible placement options
       * @example [
       *   {
       *     "name": "full_color",
       *     "techniques": [
       *       "embroidery"
       *     ],
       *     "type": "boolean",
       *     "values": [
       *       true,
       *       false
       *     ]
       *   }
       * ]
       */
      placement_options?: components["schemas"]["CatalogOption"][];
    };
    /**
     * Product
     * @description Information about the Product
     */
    Product: {
      /**
       * @description Product ID
       * @example 362
       */
      id?: number;
      /**
       * @description Main category of product
       * @example 24
       */
      main_category_id?: number;
      /**
       * @description Product type
       * @example T-Shirt
       */
      type?: string;
      /**
       * @description Product name
       * @example Unisex Organic T-Shirt | Econscious EC1000
       */
      name?: string;
      /**
       * @description Brand name
       * @example Econscious
       */
      brand?: string | null;
      /**
       * @description Model name
       * @example Unisex Organic T-Shirt
       */
      model?: string | null;
      /**
       * @description URL of a sample image for this product
       * @example https://files.cdn.printful.com/products/12/product_1550594502.jpg
       */
      image?: string;
      /**
       * @description Number of available variants for this product
       * @example 10
       */
      variant_count?: number;
      /**
       * @description Product is discontinued and can no longer be ordered
       * @example false
       */
      is_discontinued?: boolean;
      /** @description Product description */
      description?: string;
      /** @description Product's techniques */
      techniques?: components["schemas"]["Techniques"][];
      /** @description Product's design placements */
      placements?: (components["schemas"]["DesignPlacement"] & {
          /**
           * @description List of conflicting placements. Used to determine which placements can be used together.
           * @example [
           *   "back",
           *   "label_inside"
           * ]
           */
          conflicting_placements?: string[];
        })[];
      /**
       * @description Possible product options
       * @example [
       *   {
       *     "name": "stitch_color",
       *     "techniques": [
       *       "cut-sew"
       *     ],
       *     "type": "string",
       *     "values": [
       *       "White",
       *       "Black"
       *     ]
       *   }
       * ]
       */
      product_options?: components["schemas"]["CatalogOption"][];
    };
    /** HateoasLink */
    readonly HateoasLink: {
      /** @description The HREF of the linked resource. */
      readonly href?: string;
    };
    /**
     * Product links
     * @description HATEOAS links
     */
    ProductLinks: {
      /**
       * HateoasLink
       * @description Link to same resource
       * @example {
       *   "href": "https://api.printful.com/v2/catalog-products/71"
       * }
       */
      self?: components["schemas"]["HateoasLink"];
      /**
       * HateoasLink
       * @description Link to product variants
       * @example {
       *   "href": "https://api.printful.com/v2/catalog-products/71/catalog-variants"
       * }
       */
      variants?: components["schemas"]["HateoasLink"];
      /**
       * HateoasLink
       * @description Link to product categories
       * @example {
       *   "href": "https://api.printful.com/v2/catalog-products/71/categories"
       * }
       */
      categories?: components["schemas"]["HateoasLink"];
      /**
       * HateoasLink
       * @description Link to product prices
       * @example {
       *   "href": "https://api.printful.com/v2/catalog-products/71/prices"
       * }
       */
      product_prices?: components["schemas"]["HateoasLink"];
      /**
       * HateoasLink
       * @description Link product size guides
       * @example {
       *   "href": "https://api.printful.com/v2/catalog-products/71/sizes"
       * }
       */
      product_sizes?: components["schemas"]["HateoasLink"];
      /**
       * HateoasLink
       * @description Link product images
       * @example {
       *   "href": "https://api.printful.com/v2/catalog-products/71/images"
       * }
       */
      product_images?: components["schemas"]["HateoasLink"];
      /**
       * HateoasLink
       * @description Link to product stock availability endpoint
       * @example {
       *   "href": "https://api.printful.com/v2/catalog-products/71/availability"
       * }
       */
      availability?: components["schemas"]["HateoasLink"];
    };
    /**
     * Product
     * @description Information about the Product
     */
    ProductInfo: components["schemas"]["Product"] & {
      _links?: components["schemas"]["ProductLinks"];
    };
    /**
     * Paging
     * @description Paging information
     */
    Paging: {
      /**
       * @description Total number of items available
       * @example 100
       */
      total?: number;
      /**
       * @description Current result set page offset
       * @example 10
       */
      offset?: number;
      /**
       * @description Max number of items per page
       * @example 100
       */
      limit?: number;
    };
    /**
     * Product links
     * @description HATEOAS links
     */
    ProductsLinks: {
      /**
       * HateoasLink
       * @description Link to same resource
       * @example {
       *   "href": "https://api.printful.com/v2/catalog-products"
       * }
       */
      self?: components["schemas"]["HateoasLink"];
      /**
       * HateoasLink
       * @description Link to next resource
       * @example {
       *   "href": "https://api.printful.com/v2/catalog-products?offset=20"
       * }
       */
      next?: components["schemas"]["HateoasLink"];
      /**
       * HateoasLink
       * @description Link to first resource
       * @example {
       *   "href": "https://api.printful.com/v2/catalog-products"
       * }
       */
      first?: components["schemas"]["HateoasLink"];
      /**
       * HateoasLink
       * @description Link to the last resource
       * @example {
       *   "href": "https://api.printful.com/v2/catalog-products?offset=280"
       * }
       */
      last?: components["schemas"]["HateoasLink"];
    };
    ProblemDetails: {
      /**
       * Format: URL
       * @description A URL that can be followed to get to our [documentation](#section/Errors) for the problem type.
       */
      type?: string;
      /** @description The HTTP status code. */
      status?: number;
      /** @description A human-readable summary of the problem type. */
      title?: string;
      /** @description A human-readable explanation specific to the occurrence of the problem. */
      details?: string;
      /**
       * Format: URI
       * @description Optional. A URI that uniquely identifies the specific occurence of the problem
       */
      instance?: string;
    };
    ServerErrorDetails: components["schemas"]["ProblemDetails"] & {
      status?: number;
    };
    /** AvailabilityStatus */
    AvailabilityStatus: {
      /**
       * @description Region name
       * @example United States
       */
      region?: string;
      /**
       * @description Stock status. Possible values include: 'in_stock' - available for fulfillment, 'stocked_on_demand' - available for fulfillment, 'discontinued' - permanently unavailable, 'out_of_stock' - temporarily unavailable
       * @example in_stock
       */
      status?: string;
    };
    /** Variant */
    Variant: {
      /**
       * @description Variant ID, use this to specify the product when creating orders
       * @example 100
       */
      id?: number;
      /**
       * @description ID of the product that this variant belongs to
       * @example 12
       */
      catalog_product_id?: number;
      /**
       * @description Display name
       * @example Gildan 64000 Unisex Softstyle T-Shirt with Tear Away (Black / 2XL)
       */
      name?: string;
      /**
       * @description Item size
       * @example 2XL
       */
      size?: string;
      /**
       * @description Item color
       * @example Black
       */
      color?: string | null;
      /**
       * @description Hexadecimal RGB color code. May not exactly reflect the real-world color
       * @example #14191e
       */
      color_code?: string | null;
      /** @description Secondary hexadecimal RGB color code. May not exactly reflect the real-world color */
      color_code2?: string | null;
      /**
       * @description URL of a preview image for this variant
       * @example https://files.cdn.printful.com/products/12/629_1517916489.jpg
       */
      image?: string;
      /**
       * @deprecated
       * @description ~~Detailed stock status per region~~ _[Retrieve product stock availability](#operation/getProductStockAvailabilityById)_ should be used instead.
       */
      availability?: components["schemas"]["AvailabilityStatus"][];
      /** @description HATEOAS links */
      _links?: {
        /**
         * HateoasLink
         * @description Link to same resource
         * @example {
         *   "href": "https://api.printful.com/v2/catalog-variants/100"
         * }
         */
        self?: components["schemas"]["HateoasLink"];
      };
    };
    /**
     * Category
     * @description Information about the Category
     */
    Category: {
      /**
       * @description Category ID
       * @example 24
       */
      id?: number;
      /**
       * @description ID of the parent Category. If there is no parent Category, null is returned.
       * @example 6
       */
      parent_id?: number | null;
      /**
       * @description The URL of the Category image
       * @example https://s3.staging.printful.com/upload/catalog_category/b1/b1513c82696405fcc316fc611c57f132_t?v=1646395980
       */
      image_url?: string;
      /**
       * @description Category title
       * @example T-Shirts
       */
      title?: string;
      /** @description HATEOAS links */
      _links?: {
        /**
         * HateoasLink
         * @description Link to single category
         * @example {
         *   "href": "https://api.printful.com/v2/catalog-categories/1"
         * }
         */
        self?: components["schemas"]["HateoasLink"];
      };
    };
    /**
     * MeasurementValue
     * @description The measurement value for a specific size
     */
    MeasurementValue: {
      /**
       * @description The size with which the value is associated
       * @example S
       */
      size: string;
      /**
       * @description The single value associated with a size (whether this or `min_value` and `max_value` will be present)
       * @example 23.5
       */
      value?: string;
      /**
       * @description The lower boundary of the value range (whether this and `max_value` or `value` will be present)
       * @example 20
       */
      min_value?: string;
      /**
       * @description The upper boundary of the value range (whether this and `min_value` or `value` will be present)
       * @example 20
       */
      max_value?: string;
    };
    /**
     * Measurement
     * @description The information about a single size table measurement
     */
    Measurement: {
      /**
       * @description Measurement type
       * @example Length
       */
      type_label?: string;
      /**
       * @description The measurement unit if it's not defined on the size table level or is different
       * @example none
       */
      unit?: string;
      /** @description The measurement values for each size */
      values: components["schemas"]["MeasurementValue"][];
    };
    /**
     * SizeTable
     * @description Size table for the Product
     */
    SizeTable: {
      /**
       * @description Size table type
       * @enum {string}
       */
      type: "measure_yourself" | "product_measure" | "international";
      /**
       * @description The unit the size table values are in
       * @enum {string}
       */
      unit?: "inches" | "cm";
      /** @description The size table description (HTML) */
      description?: string;
      /** @description The URL of an image showing the measurements */
      image_url?: string;
      /** @description The description of the measurement image (HTML) */
      image_description?: string;
      /** @description The size table measurements */
      measurements: components["schemas"]["Measurement"][];
    };
    /**
     * ProductSizeGuide
     * @description Size Guide information for the Product
     */
    ProductSizeGuide: {
      /**
       * @description Product ID
       * @example 13
       */
      catalog_product_id: number;
      /**
       * @description The sizes available for the Product
       * @example [
       *   "S",
       *   "M",
       *   "L"
       * ]
       */
      available_sizes: string[];
      /**
       * @description Size tables for the product
       * @example [
       *   {
       *     "type": "measure_yourself",
       *     "unit": "inches",
       *     "description": "<p>Measurements are provided by suppliers.<br /><br />US customers should order a size up as the EU sizes for this supplier correspond to a smaller size in the US market.</p>\\n<p>Product measurements may vary by up to 2\\\" (5 cm).&nbsp;</p>",
       *     "image_url": "https://s3.staging.printful.com/upload/measure-yourself/6a/6a4fe322f592f2b91d5a735d7ff8d1c0_t?v=1652962720",
       *     "image_description": "<h6><strong>A Length</strong></h6>\\n<p dir=\\\"ltr\\\"><span id=\\\"docs-internal-guid-a3ac3082-7fff-5f98-2623-3eb38d5f43a1\\\">Place the end of the tape beside the collar at the top of the tee (Highest Point Shoulder). Pull the tape measure t</span><span id=\\\"docs-internal-guid-a3ac3082-7fff-5f98-2623-3eb38d5f43a1\\\">o the bottom of the shirt.</span></p>\\n<h6>B Chest</h6>\\n<p dir=\\\"ltr\\\">Measure yourself around the fullest part of your chest. Keep the tape measure horizontal.</p>",
       *     "measurements": [
       *       {
       *         "type_label": "Length",
       *         "values": [
       *           {
       *             "size": "S",
       *             "value": "24"
       *           },
       *           {
       *             "size": "M",
       *             "value": "26"
       *           },
       *           {
       *             "size": "L",
       *             "value": "28"
       *           }
       *         ]
       *       },
       *       {
       *         "type_label": "Chest",
       *         "values": [
       *           {
       *             "size": "S",
       *             "min_value": "14",
       *             "max_value": "16"
       *           },
       *           {
       *             "size": "M",
       *             "min_value": "18",
       *             "max_value": "20"
       *           },
       *           {
       *             "size": "L",
       *             "min_value": "22",
       *             "max_value": "24"
       *           }
       *         ]
       *       }
       *     ]
       *   },
       *   {
       *     "type": "product_measure",
       *     "unit": "inches",
       *     "description": "<p dir=\\\"ltr\\\">Measurements are provided by our suppliers. Product measurements may vary by up to 2\\\" (5 cm).</p>\\n<p dir=\\\"ltr\\\">US customers should order a size up as the EU sizes for this supplier correspond to a smaller size in the US market.</p>\\n<p dir=\\\"ltr\\\">Pro tip! Measure one of your products at home and compare with the measurements you see in this guide.</p>",
       *     "image_url": "https://s3.staging.printful.com/upload/product-measure/85/857e7cc8b802da216e7f1a6114075a72_t?v=1652962720",
       *     "image_description": "<h6><strong>A Length</strong></h6>\\n<p dir=\\\"ltr\\\"><span id=\\\"docs-internal-guid-a3ac3082-7fff-5f98-2623-3eb38d5f43a1\\\">Place the end of the tape beside the collar at the top of the tee (Highest Point Shoulder). Pull the tape measure t</span><span id=\\\"docs-internal-guid-a3ac3082-7fff-5f98-2623-3eb38d5f43a1\\\">o the bottom of the shirt.</span></p>\\n<h6>B Width</h6>\\n<p dir=\\\"ltr\\\">Place the end of the tape at the seam under the sleeve and pull the tape measure across the shirt to the seam under the opposite sleeve.</p>",
       *     "measurements": [
       *       {
       *         "type_label": "Length",
       *         "values": [
       *           {
       *             "size": "S",
       *             "value": "24"
       *           },
       *           {
       *             "size": "M",
       *             "value": "26"
       *           },
       *           {
       *             "size": "L",
       *             "value": "28"
       *           }
       *         ]
       *       },
       *       {
       *         "type_label": "Width",
       *         "values": [
       *           {
       *             "size": "S",
       *             "min_value": "14",
       *             "max_value": "16"
       *           },
       *           {
       *             "size": "M",
       *             "min_value": "18",
       *             "max_value": "20"
       *           },
       *           {
       *             "size": "L",
       *             "min_value": "22",
       *             "max_value": "24"
       *           }
       *         ]
       *       }
       *     ]
       *   },
       *   {
       *     "type": "measure_yourself",
       *     "unit": "cm",
       *     "description": "<p>Measurements are provided by suppliers.<br /><br />US customers should order a size up as the EU sizes for this supplier correspond to a smaller size in the US market.</p>\\n<p>Product measurements may vary by up to 2\\\" (5 cm).&nbsp;</p>",
       *     "image_url": "https://s3.staging.printful.com/upload/measure-yourself/6a/6a4fe322f592f2b91d5a735d7ff8d1c0_t?v=1652962720",
       *     "image_description": "<h6><strong>A Length</strong></h6>\\n<p dir=\\\"ltr\\\"><span id=\\\"docs-internal-guid-a3ac3082-7fff-5f98-2623-3eb38d5f43a1\\\">Place the end of the tape beside the collar at the top of the tee (Highest Point Shoulder). Pull the tape measure t</span><span id=\\\"docs-internal-guid-a3ac3082-7fff-5f98-2623-3eb38d5f43a1\\\">o the bottom of the shirt.</span></p>\\n<h6>B Chest</h6>\\n<p dir=\\\"ltr\\\">Measure yourself around the fullest part of your chest. Keep the tape measure horizontal.</p>",
       *     "measurements": [
       *       {
       *         "type_label": "Length",
       *         "values": [
       *           {
       *             "size": "S",
       *             "value": "60.96"
       *           },
       *           {
       *             "size": "M",
       *             "value": "66.04"
       *           },
       *           {
       *             "size": "L",
       *             "value": "71.12"
       *           }
       *         ]
       *       },
       *       {
       *         "type_label": "Chest",
       *         "values": [
       *           {
       *             "size": "S",
       *             "min_value": "35.56",
       *             "max_value": "40.64"
       *           },
       *           {
       *             "size": "M",
       *             "min_value": "45.72",
       *             "max_value": "50.80"
       *           },
       *           {
       *             "size": "L",
       *             "min_value": "55.88",
       *             "max_value": "60.96"
       *           }
       *         ]
       *       }
       *     ]
       *   },
       *   {
       *     "type": "product_measure",
       *     "unit": "cm",
       *     "description": "<p dir=\\\"ltr\\\">Measurements are provided by our suppliers. Product measurements may vary by up to 2\\\" (5 cm).</p>\\n<p dir=\\\"ltr\\\">US customers should order a size up as the EU sizes for this supplier correspond to a smaller size in the US market.</p>\\n<p dir=\\\"ltr\\\">Pro tip! Measure one of your products at home and compare with the measurements you see in this guide.</p>",
       *     "image_url": "https://s3.staging.printful.com/upload/product-measure/85/857e7cc8b802da216e7f1a6114075a72_t?v=1652962720",
       *     "image_description": "<h6><strong>A Length</strong></h6>\\n<p dir=\\\"ltr\\\"><span id=\\\"docs-internal-guid-a3ac3082-7fff-5f98-2623-3eb38d5f43a1\\\">Place the end of the tape beside the collar at the top of the tee (Highest Point Shoulder). Pull the tape measure t</span><span id=\\\"docs-internal-guid-a3ac3082-7fff-5f98-2623-3eb38d5f43a1\\\">o the bottom of the shirt.</span></p>\\n<h6>B Width</h6>\\n<p dir=\\\"ltr\\\">Place the end of the tape at the seam under the sleeve and pull the tape measure across the shirt to the seam under the opposite sleeve.</p>",
       *     "measurements": [
       *       {
       *         "type_label": "Length",
       *         "values": [
       *           {
       *             "size": "S",
       *             "value": "60.96"
       *           },
       *           {
       *             "size": "M",
       *             "value": "66.04"
       *           },
       *           {
       *             "size": "L",
       *             "value": "71.12"
       *           }
       *         ]
       *       },
       *       {
       *         "type_label": "Width",
       *         "values": [
       *           {
       *             "size": "S",
       *             "min_value": "35.56",
       *             "max_value": "40.64"
       *           },
       *           {
       *             "size": "M",
       *             "min_value": "45.72",
       *             "max_value": "50.80"
       *           },
       *           {
       *             "size": "L",
       *             "min_value": "55.88",
       *             "max_value": "60.96"
       *           }
       *         ]
       *       }
       *     ]
       *   },
       *   {
       *     "type": "international",
       *     "unit": "none",
       *     "measurements": [
       *       {
       *         "type_label": "US size",
       *         "values": [
       *           {
       *             "size": "S",
       *             "min_value": "8",
       *             "max_value": "10"
       *           },
       *           {
       *             "size": "M",
       *             "min_value": "12",
       *             "max_value": "14"
       *           },
       *           {
       *             "size": "L",
       *             "min_value": "16",
       *             "max_value": "18"
       *           }
       *         ]
       *       },
       *       {
       *         "type_label": "EU size",
       *         "values": [
       *           {
       *             "size": "S",
       *             "min_value": "38",
       *             "max_value": "39"
       *           },
       *           {
       *             "size": "M",
       *             "min_value": "40",
       *             "max_value": "41"
       *           },
       *           {
       *             "size": "L",
       *             "min_value": "42",
       *             "max_value": "43"
       *           }
       *         ]
       *       },
       *       {
       *         "type_label": "UK size",
       *         "values": [
       *           {
       *             "size": "S",
       *             "min_value": "4",
       *             "max_value": "6"
       *           },
       *           {
       *             "size": "M",
       *             "min_value": "8",
       *             "max_value": "10"
       *           },
       *           {
       *             "size": "L",
       *             "min_value": "12",
       *             "max_value": "14"
       *           }
       *         ]
       *       }
       *     ]
       *   }
       * ]
       */
      size_tables: components["schemas"]["SizeTable"][];
    };
    /**
     * FileOptionPrice
     * @description Info about additional product file option prices
     */
    FileOptionPrices: {
      /**
       * @description Option name
       * @example unlimited_color
       */
      name?: string;
      /**
       * @description Option value type
       * @example array
       */
      type?: string;
      /**
       * @description Possible option values
       * @example [
       *   true,
       *   false
       * ]
       */
      values?: unknown[];
      /**
       * @description Option description
       * @example Unlimited color
       */
      description?: string;
      /**
       * @description Additional price expressed in the region currency
       * @example {
       *   "false": "0.00",
       *   "true": "3.50"
       * }
       */
      price?: {
        [key: string]: string;
      };
    };
    /**
     * ItemOptionPrice
     * @description Info about additional product item option prices
     */
    LayerOptionPrices: {
      /**
       * @description Option name
       * @example 3d_puff
       */
      name?: string;
      /**
       * @description Option value type
       * @example array
       */
      type?: string;
      /**
       * @description Possible option values
       * @example [
       *   true,
       *   false
       * ]
       */
      values?: unknown[];
      /**
       * @description Option description
       * @example 3D puff
       */
      description?: string;
      /**
       * @description Additional price expressed in the region currency
       * @example {
       *   "false": "0.00",
       *   "true": "1.50"
       * }
       */
      price?: {
        [key: string]: string;
      };
    };
    /**
     * Layer
     * @description Information about the layer prices
     */
    Layers: {
      /**
       * @description Type of layer
       * @example file
       */
      type?: string;
      /**
       * @description Additional price for layer
       * @example 0.00
       */
      additional_price?: string;
      /** @description Layer options prices */
      layer_options?: components["schemas"]["LayerOptionPrices"][];
    };
    /**
     * AdditionalPlacement
     * @description Info about additional product placements prices
     */
    AdditionalPlacements: {
      /**
       * @description ID or key of placement
       * @example default
       */
      id?: string;
      /**
       * @description Title of the placement related
       * @example Print file
       */
      title?: string;
      /**
       * @description Placement type
       * @example Digital printing
       */
      type?: string;
      /**
       * @description Key associated to the available technique
       * @example DIGITAL
       */
      technique_key?: string;
      /**
       * @description Price converted to the region currency
       * @example 19.75
       */
      price?: string;
      /**
       * @description Discounted price per region
       * @example 18.75
       */
      discounted_price?: string;
      /** @description Array containing the pricing information about the file options used */
      placement_options?: components["schemas"]["FileOptionPrices"][];
      /** @description Array containing the pricing information about the layers */
      layers?: components["schemas"]["Layers"][];
    };
    /**
     * VariantTechniquePrice
     * @description Product prices information
     */
    VariantTechniquePrice: {
      /**
       * @description Key associated to the technique
       * @example DIGITAL
       */
      technique_key?: string;
      /**
       * @description Full technique name
       * @example Digital printing
       */
      technique_display_name?: string;
      /**
       * @description Price converted to the region currency
       * @example 9.50
       */
      price?: string;
      /**
       * @description Discounted price per region
       * @example 8.50
       */
      discounted_price?: string;
    };
    /**
     * VariantPriceData
     * @description Variant with the pricing information
     */
    VariantsPriceData: {
      /**
       * @description Variant id
       * @example 1
       */
      id?: number;
      /** @description Array containing pricing information about available techniques per variant */
      techniques?: components["schemas"]["VariantTechniquePrice"][];
    };
    /**
     * ProductPrice
     * @description Product prices information
     */
    ProductPrices: {
      /**
       * @description Abbreviation from the store currency or currency specified
       * @example EUR
       */
      currency?: string;
      /** @description Product related with the pricing information */
      product?: {
        /**
         * @description Product Identifier
         * @example 1
         */
        id?: number;
        /** @description Array containing the pricing information about the placement prices */
        placements?: components["schemas"]["AdditionalPlacements"][];
      };
      variants?: components["schemas"]["VariantsPriceData"][];
    };
    /**
     * VariantPrice
     * @description Variant prices information
     */
    VariantPrices: {
      /**
       * @description Currency in which prices are returned
       * @example EUR
       */
      currency?: string;
      product?: {
        /**
         * @description Product Identifier
         * @example 1
         */
        id?: number;
        /** @description Array containing the pricing information about the placement prices */
        placements?: components["schemas"]["AdditionalPlacements"][];
      };
      variant?: components["schemas"]["VariantsPriceData"];
    };
    /** VariantImage */
    VariantImage: {
      /**
       * @description Placement associated with the image
       * @example front
       */
      placement?: string;
      /**
       * @description image URL
       * @example https://printful-mockups-dev.s3.amazonaws.com/239-nl4600/medium/flat/front/05_nl4600_flat_front_base_whitebg.png?v=1666248709
       */
      image_url?: string | null;
      /**
       * @description Background color of an image. Null if background transparent
       * @example #0f0f0f
       */
      background_color?: string;
      /**
       * @description Background image of an image specified in the `image_url`. Null if no background image
       * @example https://printful-mockups-dev.s3.amazonaws.com/239-nl4600/medium/flat/front/05_nl4600_flat_front_base_whitebg.png?v=1666248709
       */
      background_image?: string | null;
      /**
       * @description The `option` parameter refers to the position of the camera on a mockup. For example, "Front" positions the camera in front of the product, "Zoomed-in" zooms in on the front, "Outside label" focuses the camera on the outside label of the product.
       * @example Front
       */
      option?: string | null;
      /**
       * @description The `option_group` parameter refers to the style of the mockup. For example, "On Hanger" will display the mockup on a hanger while "Men's" will display the mockup using a male model.
       * @example Men's 2
       */
      option_group?: string | null;
    };
    /** VariantImages */
    VariantImages: {
      /**
       * @description Variant ID
       * @example 4017
       */
      catalog_variant_id?: number;
      /**
       * @description Variant color
       * @example Turquoise
       */
      color?: string | null;
      /**
       * @description Primary variant hex color used. Use this hex color to fill the mockup.
       * @example #15d0d2
       */
      primary_hex_color?: string | null;
      /**
       * @description Secondary variant hex color used. Use this hex color to fill the mockup.
       * @example null
       */
      secondary_hex_color?: string | null;
      /** @description Variant's images */
      images?: components["schemas"]["VariantImage"][];
    };
    /**
     * MockupStyles
     * @description Data containing information about the available mockup styles
     */
    MockupStyles: {
      /**
       * @description Catalog product placement for which the mockup styles defined in `mockup_style_ids` could be used.
       * @example front
       */
      placement?: string;
      /**
       * @description Placement display name that can be shown to end-customers.
       * @example Front print
       */
      display_name?: string;
      /**
       * @description Technique name
       * @example dtg
       */
      technique?: string;
      /**
       * Format: float
       * @description Print area width of a placement defined in inches
       * @example 5
       */
      print_area_width?: number;
      /**
       * Format: float
       * @description Print area height of a placement defined in inches
       * @example 5
       */
      print_area_height?: number;
      /**
       * @description Print area DPI
       * @example 150
       */
      dpi?: number;
      /**
       * @description A list of available mockup styles for example:
       *   * On the hanger
       *   * On the Male/Female model
       *   * Flat on the table
       *   * etc.
       */
      mockup_styles?: {
          /**
           * @description Identifier of mockup style. This value is intended to be used when specifying the mockup styles during mockup generator task creation _[Create mockup generator tasks](#operation/createMockupGeneratorTasks)_.
           * @example 1
           */
          id?: number;
          /**
           * @description The category name of the mockup style
           * @example Couple's
           */
          category_name?: string;
          /**
           * @description Display name of mockup view. View determines a point of view of the camera. E.g to the right or left to the mockup.
           * @example Front
           */
          view_name?: string;
        }[];
    };
    /**
     * MockupTemplates
     * @description Data containing information about the available mockup templates which can be used for user-side positioning. For example for intention of generating mockups without the use of Printful's mockup generator.
     */
    MockupTemplates: {
      /** @description A list of variant IDs for which the positions apply */
      catalog_variant_ids?: number[];
      /**
       * @description Catalog product placement that is used for the design
       * @example front
       */
      placement?: string;
      /**
       * @description Catalog product technique that is used for the design
       * @example dtg
       */
      technique?: string;
      /**
       * @description Semi-transparent main template image URL.
       * @example https://www.printful.com/files/generator/40/11oz_template.png
       */
      image_url?: string;
      /**
       * @description Background image URL (optional). Used for certain mockups e.g. a wall behind hanged poster. If it's defined it is intended to be layered under the image defined in `image_url`.
       * @example null
       */
      background_url?: string | null;
      /**
       * @description HEX color code that should be used as a background color of `image_url`.
       * @example null
       */
      background_color?: number | null;
      /**
       * @description Width of the whole template in pixels.
       * @example 560
       */
      template_width?: number;
      /**
       * @description Height of the whole template in pixels.
       * @example 295
       */
      template_height?: number;
      /**
       * @description Print area width (image is positioned in this area).
       * @example 520
       */
      print_area_width?: number;
      /**
       * @description Print area height (image is positioned in this area).
       * @example 202
       */
      print_area_height?: number;
      /**
       * @description Print area top offset (offset in template).
       * @example 18
       */
      print_area_top?: number;
      /**
       * @description Print area left offset (offset in template).
       * @example 20
       */
      print_area_left?: number;
      /**
       * @description Should the main template image (image_url) be used as an overlay or as a background.
       * @example overlay
       * @enum {string}
       */
      template_positioning?: "overlay" | "background";
      /**
       * @description Wall art product orientation. Possible values: horizontal, vertical, any
       * @example any
       * @enum {string}
       */
      orientation?: "horizontal" | "vertical" | "any";
    };
    /** SellingRegionStockAvailability */
    SellingRegionStockAvailability: {
      /**
       * @description Name of the selling region for which the stock availability apply
       * @enum {string}
       */
      name?: "worldwide" | "north_america" | "canada" | "europe" | "spain" | "latvia" | "uk" | "france" | "australia" | "japan" | "new_zealand" | "italy" | "brazil" | "southeast_asia" | "republic_of_korea" | "english_speaking_regions";
      /**
       * @description Availability status:
       *   * in stock: Product with the specified technique is stocked in this region
       *   * out of stock: Product with the specified technique is not stocked in this region
       *   * not fulfillable: Printful does not stock this product in this region
       *   * unknown: The exact stock status could not be determined
       *
       * @enum {string}
       */
      availability?: "in stock" | "out of stock" | "not fulfillable" | "unknown";
      /** @description Availability of a placement options for a catalog variant in a specified selling region. If a placement option is present in this array and availability is set to true it means it is available for this product. If it is set to false it means that the placement option is available for the variant, but not currently fulfillable for the given selling region settings. If an option is not present in the array but is present as an option on the product (see: [Retrieve a single catalog product](#tag/Catalog-v2/operation/getProducts)) it means the option is always available for that product. */
      placement_option_availability?: {
          /** @example unlimited_color */
          name?: string;
          /** @example true */
          availability?: boolean;
        }[];
    };
    /** TechniqueStockAvailability */
    TechniqueStockAvailability: {
      technique?: components["schemas"]["TechniqueEnum"];
      /** @description List of selling regions with stock availability */
      selling_regions?: components["schemas"]["SellingRegionStockAvailability"][];
    };
    /**
     * VariantStockAvailability
     * @description Stock availability data for a specific catalog variant
     */
    VariantStockAvailability: {
      /**
       * @description Catalog variant ID for which the the stock availability data apply
       * @example 4011
       */
      catalog_variant_id?: number;
      /** @description Stock availability data for specific techniques of a catalog variant */
      techniques?: components["schemas"]["TechniqueStockAvailability"][];
      /** @description HATEOAS links */
      _links?: {
        /**
         * HateoasLink
         * @description Link to the catalog variant details
         * @example {
         *   "href": "https://api.printful.com/v2/catalog-variants/4011"
         * }
         */
        variant?: components["schemas"]["HateoasLink"];
      };
    };
    /**
     * FilterSettings
     * @description The list of the filters that were used in the request
     */
    readonly FilterSettings: readonly {
        /**
         * @description Name of the filter
         * @example selling_region_name
         */
        name?: string;
        /**
         * @description Value of the filter
         * @example worldwide
         */
        value?: string;
      }[];
    /**
     * Address
     * @description Information about the address
     */
    Address: {
      /**
       * @description Full name
       * @example John Smith
       */
      name?: string;
      /**
       * @description Company name
       * @example John Smith Inc
       */
      company?: string;
      /**
       * @description Address line 1
       * @example 19749 Dearborn St
       */
      address1?: string;
      /** @description Address line 2 */
      address2?: string;
      /**
       * @description City
       * @example Chatsworth
       */
      city?: string;
      /**
       * @description State code
       * @example CA
       */
      state_code?: string;
      /**
       * @description State name
       * @example California
       */
      state_name?: string;
      /**
       * @description Country code
       * @example US
       */
      country_code?: string;
      /**
       * @description Country name
       * @example United States
       */
      country_name?: string;
      /**
       * @description ZIP/Postal code
       * @example 91311
       */
      zip?: string;
      /** @description Phone number */
      phone?: string;
      /** @description Email address */
      email?: string;
      /**
       * @description TAX number (`optional`, but in case of Brazil country this field becomes `required` and will be used as CPF/CNPJ number)<br> CPF format is 000.000.000-00 (14 characters);<br> CNPJ format is 00.000.000/0000-00 (18 characters).
       * @example 123.456.789-10
       */
      tax_number?: string;
    };
    /**
     * @description If the costs are being calculated or recalculated, this will have the status `calculating`. Once finished the status will be `done`.
     * @example done
     * @enum {string}
     */
    CalculationStatus: "done" | "calculating" | "failed";
    /**
     * Costs
     * @description The Order costs (Printful prices)
     */
    readonly Costs: {
      readonly calculation_status?: components["schemas"]["CalculationStatus"];
      /**
       * @description The code of the currency in which the costs are returned.
       * @example USD
       */
      readonly currency?: string | null;
      /**
       * @description Total cost of all items.
       * @example 14.95
       */
      readonly subtotal?: string | null;
      /**
       * @description Discount sum.
       * @example 1.79
       */
      readonly discount?: string | null;
      /**
       * @description Shipping costs.
       * @example 4.79
       */
      readonly shipping?: string | null;
      /**
       * @description Digitization costs.
       * @example 3.95
       */
      readonly digitization?: string | null;
      /**
       * @description Additional fee for custom product.
       * @example 0.00
       */
      readonly additional_fee?: string | null;
      /**
       * @description Custom product fulfillment fee.
       * @example 0.00
       */
      readonly fulfillment_fee?: string | null;
      /**
       * @description Retail delivery fee.
       * @example 0.00
       */
      readonly retail_delivery_fee?: string | null;
      /**
       * @description Sum of vat (not included in the item price).
       * @example 4.60
       */
      readonly vat?: string | null;
      /**
       * @description Sum of taxes (not included in the item price).
       * @example 0.00
       */
      readonly tax?: string | null;
      /**
       * @description Grand Total (subtotal-discount+tax+vat+shipping).
       * @example 26.50
       */
      readonly total?: string | null;
    };
    /**
     * RetailCosts
     * @description The Order's retail costs
     */
    readonly RetailCosts: {
      readonly calculation_status?: components["schemas"]["CalculationStatus"];
      /**
       * @description The code of the currency in which the retail costs are returned.
       * @example EUR
       */
      readonly currency?: string;
      /**
       * @description Total cost of all items.
       * @example 26.55
       */
      readonly subtotal?: string | null;
      /**
       * @description Discount sum.
       * @example 0.00
       */
      readonly discount?: string;
      /**
       * @description Shipping costs.
       * @example 4.79
       */
      readonly shipping?: string;
      /**
       * @description Sum of VAT (not included in the item price).
       * @example 0.00
       */
      readonly vat?: string;
      /**
       * @description Sum of taxes (not included in the item price).
       * @example 0.00
       */
      readonly tax?: string;
      /**
       * @description Grand Total (subtotal-discount+tax+vat+shipping).
       * @example 31.34
       */
      readonly total?: string | null;
    };
    /**
     * CatalogItemSummary
     * @description Simplified information about the Catalog Item
     */
    CatalogItemSummary: {
      /**
       * @description Item ID
       * @example 1234
       */
      id?: number;
      /**
       * @description The item type
       * @example order_item
       * @enum {string}
       */
      type?: "order_item" | "branding_item";
      /**
       * @description Item source
       * @example catalog
       * @enum {string}
       */
      source?: "catalog";
      /**
       * @description Catalog Variant ID associated with the Item
       * @example 4011
       */
      catalog_variant_id?: number;
      /**
       * @description Item user specified external ID
       * @example 123_abc
       */
      external_id?: string | null;
      /**
       * @description Item quantity
       * @example 1
       */
      quantity?: number;
      /**
       * @description Item custom name
       * @example Custom name
       */
      name?: string;
      /**
       * @description The price Printful charges for the Item
       * @example 8.00
       */
      price?: string;
      /**
       * @description Item retail price
       * @example 10.00
       */
      retail_price?: string;
      /**
       * @description The price currency
       * @example EUR
       */
      currency?: string;
      /**
       * @description The retail price currency
       * @example USD
       */
      retail_currency?: string;
      /** @description HATEOAS links */
      _links?: {
        readonly self?: components["schemas"]["HateoasLink"];
      };
    };
    /**
     * WarehouseItemSummary
     * @description Simplified information about the Warehouse Item
     */
    WarehouseItemSummary: {
      /**
       * @description Item ID
       * @example 1234
       */
      id?: number;
      /**
       * @description The item type
       * @example order_item
       * @enum {string}
       */
      type?: "order_item" | "branding_item";
      /**
       * @description Item source
       * @example warehouse
       * @enum {string}
       */
      source?: "warehouse";
      /**
       * @description ID of warehouse product associated with the Item
       * @example 1123581321
       */
      warehouse_product_variant_id?: number;
      /**
       * @description Item user specified external ID
       * @example 123_abc
       */
      external_id?: string | null;
      /**
       * @description Item quantity
       * @example 1
       */
      quantity?: number;
      /**
       * @description Item custom name
       * @example Custom name
       */
      name?: string;
      /**
       * @description The price Printful charges for the Item
       * @example 8.00
       */
      price?: string;
      /**
       * @description Item retail price
       * @example 10.00
       */
      retail_price?: string;
      /**
       * @description The price currency
       * @example EUR
       */
      currency?: string;
      /**
       * @description The retail price currency
       * @example USD
       */
      retail_currency?: string;
      /** @description HATEOAS links */
      _links?: {
        readonly self?: components["schemas"]["HateoasLink"];
      };
    };
    /**
     * SyncItemSummary
     * @description Simplified information about the Sync Item
     */
    SyncItemSummary: {
      /**
       * @description Item ID
       * @example 1234
       */
      id?: number;
      /**
       * @description The item type
       * @example order_item
       * @enum {string}
       */
      type?: "order_item" | "branding_item";
      /**
       * @description Item source
       * @example sync
       * @enum {string}
       */
      source?: "sync";
      /**
       * @description Sync Variant ID associated with the Item
       * @example 123456
       */
      sync_variant_id?: number;
      /**
       * @description Item user specified external ID
       * @example 123_abc
       */
      external_id?: string | null;
      /**
       * @description Item quantity
       * @example 1
       */
      quantity?: number;
      /**
       * @description Item custom name
       * @example Custom name
       */
      name?: string;
      /**
       * @description The price Printful charges for the Item
       * @example 8.00
       */
      price?: string;
      /**
       * @description Item retail price
       * @example 10.00
       */
      retail_price?: string;
      /**
       * @description The price currency
       * @example EUR
       */
      currency?: string;
      /**
       * @description The retail price currency
       * @example USD
       */
      retail_currency?: string;
      /** @description HATEOAS links */
      _links?: {
        readonly self?: components["schemas"]["HateoasLink"];
      };
    };
    /**
     * OrderSummary
     * @description Order summary
     */
    readonly OrderSummary: {
      /**
       * @description Order ID
       * @example 123
       */
      readonly id?: number;
      /**
       * @description Order ID from the external system
       * @example 4235234213
       */
      readonly external_id?: string | null;
      /**
       * @description Store ID
       * @example 10
       */
      readonly store_id?: number;
      /**
       * @description Shipping method. Defaults to 'STANDARD'
       * @example STANDARD
       */
      readonly shipping?: string;
      /**
       * @description Order status:<br />
       * **draft** - order is not submitted for fulfillment<br />
       * **failed** - order was submitted for fulfillment but was not accepted because of an error (problem with address, printfiles, charging, etc.)<br />
       * **pending** - order has been submitted for fulfillment<br />
       * **canceled** - order is canceled<br />
       * **onhold** - order has encountered a problem during the fulfillment that needs to be resolved together with the Printful customer service<br />
       * **inprocess** - order is being fulfilled and is no longer cancellable<br />
       * **partial** - order is partially fulfilled (some items are shipped already, the rest will follow)<br />
       * **fulfilled** - all items are shipped
       *
       * @example draft
       */
      readonly status?: string;
      /**
       * Format: date-time
       * @description Time when the order was created
       * @example 2023-04-05T06:07:08Z
       */
      readonly created_at?: string;
      /**
       * Format: date-time
       * @description Time when the order was updated
       * @example 2023-04-05T06:07:08Z
       */
      readonly updated_at?: string;
      /**
       * Address
       * @description The recipient data.
       */
      readonly recipient?: components["schemas"]["Address"];
      readonly costs?: components["schemas"]["Costs"];
      readonly retail_costs?: components["schemas"]["RetailCosts"];
      /** @description Simplified order item list. For a full list of all items use the [Get Order Items](#operation/getItemsByOrderId) endpoint. */
      readonly order_items?: (components["schemas"]["CatalogItemSummary"] | components["schemas"]["WarehouseItemSummary"] | components["schemas"]["SyncItemSummary"])[];
      /** @description HATEOAS links */
      readonly _links?: {
        /**
         * HateoasLink
         * @description Link to the order details
         * @example {
         *   "href": "https://api.printful.com/v2/orders/123"
         * }
         */
        self?: components["schemas"]["HateoasLink"];
        /**
         * HateoasLink
         * @description Link to all order items associated with the order
         * @example {
         *   "href": "https://api.printful.com/v2/orders/123/order-items"
         * }
         */
        order_items?: components["schemas"]["HateoasLink"];
        /**
         * HateoasLink
         * @description Link to the shipments associated with the order
         * @example {
         *   "href": "https://api.printful.com/v2/orders/123/shipments"
         * }
         */
        shipments?: components["schemas"]["HateoasLink"];
      };
    };
    /**
     * @description Item user specified external ID
     * @example 123_abc
     */
    ItemExternalId: string | null;
    /**
     * 3dPuffOption
     * @description Should thread use 3d puff technique
     */
    "3dPuffOption": {
      /**
       * @description Option identifier
       * @example 3d_puff
       * @enum {string}
       */
      name: "3d_puff";
      /**
       * @description Whether the 3d puff technique should be used for the layer.
       * @example true
       */
      value: boolean;
    };
    /**
     * ThreadColorsOption
     * @description Specify thread colors for embroidery technique
     */
    ThreadColorsOption: {
      /**
       * @description Option identifier
       * @example thread_colors
       * @enum {string}
       */
      name: "thread_colors";
      /** @description Thread colors for embroidery technique */
      value: string[];
    };
    /** @description List of layer options */
    LayerOptions: (components["schemas"]["3dPuffOption"] | components["schemas"]["ThreadColorsOption"])[];
    /**
     * LayerPosition
     * @description Information about the Layer position
     */
    LayerPosition: {
      /**
       * Format: float
       * @description Layer width in inches
       * @example 10
       */
      width?: number;
      /**
       * Format: float
       * @description Layer height in inches
       * @example 10
       */
      height?: number;
      /**
       * Format: float
       * @description Layer top position in inches
       * @example 0
       */
      top?: number;
      /**
       * Format: float
       * @description Layer left position in inches
       * @example 0
       */
      left?: number;
    };
    /**
     * Layer
     * @description Information about the Layer
     */
    Layer: {
      /**
       * @description Type of layer (e.g. file, text)
       * @example file
       */
      type?: string;
      /**
       * @description File image URL if layer type is file
       * @example ​https://www.printful.com/static/images/layout/printful-logo.png
       */
      url?: string;
      layer_options?: components["schemas"]["LayerOptions"];
      position?: components["schemas"]["LayerPosition"];
    };
    /**
     * UnlimitedColorOption
     * @description Specify if the design should use unlimited color technique
     */
    UnlimitedColorOption: {
      /**
       * @description Option identifier
       * @example unlimited_color
       * @enum {string}
       */
      name: "unlimited_color";
      /**
       * @description Whether the design should use unlimited color technique.
       * @example true
       */
      value: boolean;
    };
    /**
     * InsideLabelTypeOption
     * @description Specify the type of inside label
     */
    InsideLabelTypeOption: {
      /**
       * @description Option identifier
       * @example inside_label_type
       * @enum {string}
       */
      name: "inside_label_type";
      /**
       * @description Specifies type of inside label design that should be used
       * @enum {string}
       */
      value: "native" | "custom";
    };
    /** @description List of placement options */
    PlacementOptions: (components["schemas"]["UnlimitedColorOption"] | components["schemas"]["InsideLabelTypeOption"])[];
    /**
     * Placement
     * @description Information about the Placement
     */
    Placement: {
      /**
       * @description Name of the placement
       * @example front
       */
      placement?: string;
      /**
       * @description Placement's technique
       * @example DTG
       */
      technique?: string;
      /** @description Information about placement's layers */
      layers?: components["schemas"]["Layer"][];
      placement_options?: components["schemas"]["PlacementOptions"];
      /**
       * @description Status of the placement design
       * @enum {string}
       */
      status?: "ok" | "failed";
      /**
       * @description Reason behind failed status
       * @example Product with ID: 656 cannot have disjointed design elements.
       */
      status_explanation?: string;
    };
    /**
     * InsidePocketOption
     * @description Specify if inside pocket should be added to the product
     */
    InsidePocketOption: {
      /**
       * @description Option identifier
       * @example inside_pocket
       * @enum {string}
       */
      name: "inside_pocket";
      /**
       * @description Whether inside pocket should be added to the product.
       * @example true
       */
      value: boolean;
    };
    /**
     * StitchColorOption
     * @description Specified what color should be used for stitches
     */
    StitchColorOption: {
      /**
       * @description Option identifier
       * @example stitch_color
       * @enum {string}
       */
      name: "stitch_color";
      /**
       * @description Option value
       * @example white
       */
      value: string;
    };
    /**
     * NotesOption
     * @description Include additional notes for fulfillment for embroidery prints
     */
    NotesOption: {
      /**
       * @description Option identifier
       * @example notes
       * @enum {string}
       */
      name: "notes";
      /**
       * @description Additional notes for fulfillment for embroidery prints.
       * @example Please make sure that top side of the print is within print area
       */
      value: string;
    };
    /**
     * LifelikeOption
     * @description Specifies if generated mockup should use lifelike effect
     */
    LifelikeOption: {
      /**
       * @description Option identifier
       * @example lifelike
       * @enum {string}
       */
      name: "lifelike";
      /**
       * @description Whether generated mockup should use lifelike effect.
       * @example true
       */
      value: boolean;
    };
    /** @description List of product options */
    ProductOptions: (components["schemas"]["InsidePocketOption"] | components["schemas"]["StitchColorOption"] | components["schemas"]["NotesOption"] | components["schemas"]["LifelikeOption"])[];
    /**
     * Item
     * @description Information about the Item
     */
    Item: {
      /**
       * @description Item ID
       * @example 1234
       */
      id?: number;
      external_id?: components["schemas"]["ItemExternalId"];
      /**
       * @description Item quantity
       * @example 1
       */
      quantity?: number;
      /**
       * @description Item retail price
       * @example 10.00
       */
      retail_price?: string;
      /**
       * @description Item custom name
       * @example Custom name
       */
      name?: string;
      /** @description Information about item placements */
      placements?: components["schemas"]["Placement"][];
      product_options?: components["schemas"]["ProductOptions"];
      /** @description HATEOAS links */
      _links?: {
        readonly self?: components["schemas"]["HateoasLink"];
      };
    };
    CatalogItem: components["schemas"]["Item"] & {
      /**
       * @description ID of catalog variant
       * @example 4011
       */
      catalog_variant_id: number;
      /**
       * @description Catalog source
       * @enum {string}
       */
      source: "catalog";
    };
    /**
     * Item
     * @description Information about the Item
     */
    ItemWithoutPlacements: {
      /**
       * @description Item ID
       * @example 1234
       */
      id?: number;
      external_id?: components["schemas"]["ItemExternalId"];
      /**
       * @description Item quantity
       * @example 1
       */
      quantity?: number;
      /**
       * @description Item retail price
       * @example 10.00
       */
      retail_price?: string;
      /**
       * @description Item custom name
       * @example Custom name
       */
      name?: string;
      /** @description HATEOAS links */
      _links?: {
        readonly self?: components["schemas"]["HateoasLink"];
      };
    };
    SyncItem: components["schemas"]["ItemWithoutPlacements"] & ({
      /**
       * @description Sync Variant ID (integer) or External ID (if prefixed with @)
       * @example @1234
       */
      sync_variant_id: string | number;
      /**
       * @description Sync product source
       * @enum {string}
       */
      source: "sync";
    });
    /**
     * Gift
     * @description The gift subject and message
     */
    Gift: {
      /**
       * @description Gift message subject
       * @example To John
       */
      subject?: string;
      /**
       * @description Gift message
       * @example Happy birthday!
       */
      message?: string;
    };
    /**
     * PackingSlip
     * @description The values for customized packing slip
     */
    PackingSlip: {
      /**
       * @description Customer service email
       * @example test@example.com
       */
      email?: string;
      /**
       * @description Customer service phone
       * @example +48000000000
       */
      phone?: string;
      /**
       * @description Custom packing slip message
       * @example This is a message
       */
      message?: string;
      /**
       * @description URL address to a sticker we will put on a package
       * @example https://example.com/image.jpg
       */
      logo_url?: string;
      /**
       * @description Store name override for the return address
       * @example A store
       */
      store_name?: string;
      /**
       * @description Your own Order ID that will be printed instead of Printful's Order ID
       * @example 11235813
       */
      custom_order_id?: string;
    };
    /**
     * Customization
     * @description The Order's customization values
     */
    Customization: {
      gift?: components["schemas"]["Gift"];
      packing_slip?: components["schemas"]["PackingSlip"];
    };
    /**
     * Order
     * @description Order
     */
    readonly Order: {
      /**
       * @description Order ID
       * @example 123
       */
      readonly id?: number;
      /**
       * @description Order ID from the external system
       * @example 4235234213
       */
      readonly external_id?: string | null;
      /**
       * @description Store ID
       * @example 10
       */
      readonly store_id?: number;
      /**
       * @description Shipping method. Defaults to 'STANDARD'
       * @example STANDARD
       */
      readonly shipping?: string;
      /**
       * @description Order status:<br />
       * **draft** - order is not submitted for fulfillment<br />
       * **failed** - order was submitted for fulfillment but was not accepted because of an error (problem with address, printfiles, charging, etc.)<br />
       * **pending** - order has been submitted for fulfillment<br />
       * **canceled** - order is canceled<br />
       * **onhold** - order has encountered a problem during the fulfillment that needs to be resolved together with the Printful customer service<br />
       * **inprocess** - order is being fulfilled and is no longer cancellable<br />
       * **partial** - order is partially fulfilled (some items are shipped already, the rest will follow)<br />
       * **fulfilled** - all items are shipped
       *
       * @example draft
       */
      readonly status?: string;
      /**
       * Format: date-time
       * @description Time when the order was created
       * @example 2023-04-05T06:07:08Z
       */
      readonly created_at?: string;
      /**
       * Format: date-time
       * @description Time when the order was updated
       * @example 2023-04-05T06:07:08Z
       */
      readonly updated_at?: string;
      /**
       * Address
       * @description The recipient data.
       */
      readonly recipient?: components["schemas"]["Address"];
      readonly costs?: components["schemas"]["Costs"];
      readonly retail_costs?: components["schemas"]["RetailCosts"];
      /** @description Simplified order item list. For a full list of all items use the [Get Order Items](#operation/getItemsByOrderId) endpoint. */
      readonly order_items?: (components["schemas"]["CatalogItemSummary"] | components["schemas"]["WarehouseItemSummary"] | components["schemas"]["SyncItemSummary"])[];
      readonly customization?: components["schemas"]["Customization"];
      /** @description HATEOAS links */
      readonly _links?: {
        /**
         * HateoasLink
         * @description Link to the order details
         * @example {
         *   "href": "https://api.printful.com/v2/orders/123"
         * }
         */
        self?: components["schemas"]["HateoasLink"];
        /**
         * HateoasLink
         * @description Link to the order confirmation
         * @example {
         *   "href": "https://api.printful.com/v2/orders/123/confirmation"
         * }
         */
        order_confirmation?: components["schemas"]["HateoasLink"];
        /**
         * HateoasLink
         * @description Link to all order items associated with the order
         * @example {
         *   "href": "https://api.printful.com/v2/orders/123/order-items"
         * }
         */
        order_items?: components["schemas"]["HateoasLink"];
        /**
         * HateoasLink
         * @description Link to the shipments associated with the order
         * @example {
         *   "href": "https://api.printful.com/v2/orders/123/shipments"
         * }
         */
        shipments?: components["schemas"]["HateoasLink"];
      };
    };
    WarehouseItem: components["schemas"]["ItemWithoutPlacements"] & {
      /**
       * @description ID of warehouse variant
       * @example 1234
       */
      warehouse_product_variant_id?: number;
      /**
       * @description Warehouse source
       * @enum {string}
       */
      source?: "warehouse";
    };
    /** Tracking Event */
    TrackingEvent: {
      /**
       * Format: date-time
       * @example 2023-06-15T19:15:05Z
       */
      triggered_at?: string;
      /** @example Arrived At Destination */
      description?: string;
    };
    /** ShipmentItem */
    ShipmentItem: {
      /** @example 10 */
      id?: number;
      /** @example 20 */
      order_item_id?: number;
      /** @example item-external-id */
      order_item_external_id?: string | null;
      /** @example Item name */
      order_item_name?: string | null;
      /** @example 1 */
      quantity?: number;
      _links?: {
        order_item?: {
          /** @example ​https://api.printful.com/v2/orders/2/order-items/20 */
          href?: string;
        };
      };
    };
    /** Shipment */
    Shipment: {
      /** @example 1 */
      id?: number;
      /** @example 2 */
      order_id?: number;
      /** @example my_custom_id_1234 */
      order_external_id?: string | null;
      /**
       * @description The carrier that will fulfill the shipment.
       * @example USPS
       */
      carrier?: string | null;
      /**
       * @description The service being used to fulfill the shipment.
       * @example USPS Priority Mail
       */
      service?: string | null;
      /**
       * @example canceled
       * @enum {string}
       */
      shipment_status?: "pending" | "onhold" | "canceled" | "packaged" | "shipped" | "returned" | "outstock";
      /**
       * Format: date-time
       * @example 2023-06-15T16:35:35Z
       */
      shipped_at?: string | null;
      /** @enum {string} */
      delivery_status?: "unknown" | "delivered" | "pre_transit" | "in_transit" | "out_for_delivery" | "available_for_pickup" | "return_to_sender" | "failure" | "canceled";
      /**
       * Format: date-time
       * @example 2023-06-15T16:35:35Z
       */
      delivered_at?: string | null;
      departure_address?: {
        /** @example United States */
        country_name?: string;
        /** @example US */
        country_code?: string;
        /** @example CA */
        state_code?: string;
      };
      /** @description If there is an issue with items in a shipment, a reshipment might be necessary. This property will be false if it is the original shipment and true if it is a reshipment */
      is_reshipment?: boolean;
      /** @example ​https://myorders.com/tracking/39925631 */
      tracking_url?: string;
      tracking_events?: components["schemas"]["TrackingEvent"][];
      estimated_delivery?: {
        /**
         * Format: date
         * @description Earliest estimated date the shipment will arrive
         * @example 2023-06-15
         */
        from_date?: string;
        /**
         * Format: date
         * @description Latest estimated date the shipment will arrive
         * @example 2023-06-15
         */
        to_date?: string;
        /**
         * Format: date-time
         * @example 2023-06-15T16:35:35Z
         */
        calculated_at?: string;
      } | null;
      shipment_items?: components["schemas"]["ShipmentItem"][];
      _links?: {
        self?: {
          /** @example ​https://api.printful.com/v2/shipments/1 */
          href?: string;
        };
        order?: {
          /** @example ​https://api.printful.com/v2/orders/2 */
          href?: string;
        };
      };
    };
    /**
     * SyncProduct
     * @description Information about the SyncProduct
     */
    SyncProductResponse: {
      /**
       * @description Sync Product ID
       * @example 1000
       */
      id?: number;
      /**
       * @description Product ID from the Ecommerce platform
       * @example 12312414
       */
      external_id?: string;
      /**
       * @description Name of the Sync Product
       * @example Red T-Shirt
       */
      name?: string;
      /**
       * @description Thumbnail image for the Sync Product
       * @example ​https://your-domain.com/path/to/image.png
       */
      thumbnail_url?: string;
      /**
       * @description Whether the Sync Product is ignored. Ignored Sync Products will not be imported to Printful and, for Shopify stores, the stock status will not be updated.
       * @example false
       */
      is_ignored?: boolean;
      /** @description Sync Product links */
      _links?: {
        self?: {
          /**
           * @description Link to same resource
           * @example https://api.printful.com/v2/sync-products/1000
           */
          href?: string;
        };
        sync_variants?: {
          /**
           * @description Link to the Sync Variant list of this Sync Product
           * @example https://api.printful.com/v2/sync-variants?sync_product_id=1000
           */
          href?: string;
        };
      };
    };
    /**
     * Sync products links
     * @description HATEOAS links
     */
    readonly SyncProductsLinks: {
      readonly self?: {
        /**
         * @description Link to same resource
         * @example https://api.printful.com/v2/sync-products?offset=20&limit=20
         */
        href?: string;
      };
      readonly next?: {
        /**
         * @description Link to the next page
         * @example https://api.printful.com/v2/sync-products?offset=40&limit=20
         */
        href?: string;
      };
      readonly previous?: {
        /**
         * @description Link to the previous page
         * @example https://api.printful.com/v2/sync-products?offset=0&limit=20
         */
        href?: string;
      };
      readonly first?: {
        /**
         * @description Link to the first page
         * @example https://api.printful.com/v2/sync-products?offset=0&limit=20
         */
        href?: string;
      };
      readonly last?: {
        /**
         * @description Link to the last page
         * @example https://api.printful.com/v2/sync-products?offset=300&limit=20
         */
        href?: string;
      };
    };
    /**
     * SyncProductData
     * @description Information about the Sync Product
     */
    SyncProduct: {
      /**
       * @description Your own identifier for the Sync Product. It must be unique across all Sync Products in the store.
       *
       * The external ID must not contain whitespace, 4-byte Unicode characters, and following characters: `,`, `@`.
       *
       * If the external ID is not provided in the request, we will generate a 14-character hexadecimal ID.
       *
       * @example 12312414
       */
      external_id?: string;
      /**
       * @description Name of the Sync Product
       * @example Red T-Shirt
       */
      name?: string;
      /**
       * Format: uri
       * @description Thumbnail image for the Sync Product
       * @example ​https://your-domain.com/path/to/image.png
       */
      thumbnail_url?: string;
    };
    /**
     * SyncProductCreationData
     * @description Information about the Sync Product to be created
     */
    SyncProductCreationData: components["schemas"]["SyncProduct"];
    /**
     * LayerPosition
     * @description Information about the Layer position
     */
    LayerPositionRequest: {
      /**
       * Format: float
       * @description Layer width in inches
       * @example 10
       */
      width: number;
      /**
       * Format: float
       * @description Layer height in inches
       * @example 10
       */
      height: number;
      /**
       * Format: float
       * @description Layer top position in inches
       * @example 0
       */
      top: number;
      /**
       * Format: float
       * @description Layer left position in inches
       * @example 0
       */
      left: number;
    };
    /**
     * FileLayer
     * @description Information about the file layer
     */
    FileLayerRequest: {
      /**
       * @description Type of layer (e.g. file, text)
       * @example file
       * @enum {string}
       */
      type: "file";
      /**
       * @description File image URL
       * @example https://www.printful.com/static/images/layout/printful-logo.png
       */
      url: string;
      layer_options?: components["schemas"]["LayerOptions"];
      position?: components["schemas"]["LayerPositionRequest"];
    };
    /**
     * Placement
     * @description Information about the Placement
     */
    PlacementRequest: {
      /**
       * @description Name of the placement
       * @example front
       */
      placement: string;
      /**
       * @description Placement's technique
       * @example DTG
       */
      technique: string;
      /** @description Information about placement's layers */
      layers: components["schemas"]["FileLayerRequest"][];
      placement_options?: components["schemas"]["PlacementOptions"];
    };
    /**
     * Sync Variant from Catalog source
     * @description Sync Variant request with catalog source
     */
    SyncVariantFromCatalog: {
      /**
       * @description Source of the sync variant
       * @example catalog
       */
      source: string;
      /**
       * @description Catalog Variant ID used for the Sync Variant (it can be found in [Get Product Variants](#operation/getVariantById) endpoint response).
       * @example 4011
       */
      catalog_variant_id: number;
      /**
       * @description Your own identifier for the Sync Variant. It must be unique across all Sync Variants in the store.
       *
       * The external ID must not contain whitespace, 4-byte Unicode characters, and following characters: `,`, `@`.
       *
       * If the external ID is not provided in the request, we will generate a 14-character hexadecimal ID.
       *
       * @example external-1234
       */
      external_id?: string;
      /**
       * @description Retail price of this sync variant
       * @example 10.50
       */
      retail_price?: string;
      /**
       * @description SKU of product variant
       * @example some-sku-12
       */
      sku?: string;
      product_options?: components["schemas"]["ProductOptions"];
      placements: components["schemas"]["PlacementRequest"][];
    };
    /**
     * SyncProductUpdateData
     * @description Information about the Sync Product to be updated
     */
    SyncProductUpdateData: components["schemas"]["SyncProduct"];
    /** @description The file layer of the product placement */
    PlacementLayer: {
      /** @example file */
      type?: string;
      /** @example ​https://picsum.photos/200 */
      url?: string;
      layer_options?: components["schemas"]["LayerOptions"];
      position?: components["schemas"]["LayerPosition"];
    };
    /**
     * Option
     * @description Information about the product placements that can be used to specify the design placement
     */
    SyncVariantDesignPlacement: {
      /**
       * @description Name of placement that can be used to place design in a correct spot on a product
       * @example back
       */
      placement?: string;
      /**
       * @description Indicates technique for which the placements are available
       * @example embroidery
       */
      technique?: string;
      layers?: components["schemas"]["PlacementLayer"][];
      placement_options?: components["schemas"]["PlacementOptions"];
      /**
       * @description Status of the placement design
       * @enum {string}
       */
      status?: "ok" | "failed";
      /**
       * @description Reason behind failed status
       * @example Product with ID: 656 cannot have disjointed design elements.
       */
      status_explanation?: string;
    };
    /**
     * Sync variant links
     * @description HATEOAS links
     */
    readonly SyncVariantLinks: {
      readonly self?: {
        /**
         * @description Link to same resource
         * @example https://api.printful.com/v2/sync-variants/10
         */
        href?: string;
      };
      readonly sync_product?: {
        /**
         * @description Link to the sync variant's product
         * @example https://api.printful.com/v2/sync-products/1000
         */
        href?: string;
      };
    };
    /**
     * SyncVariant
     * @description Information about the SyncVariant
     */
    SyncVariant: {
      /**
       * @description Sync Variant ID
       * @example 10
       */
      id?: number;
      /**
       * @description Variant ID from the Ecommerce platform
       * @example 12312414
       */
      external_id?: string;
      /**
       * @description Sync Variant name
       * @example Red T-Shirt
       */
      name?: string;
      /**
       * @description Indicates the status of the Sync Variant
       * @example synced
       * @enum {string}
       */
      status?: "synced" | "unsynced";
      /**
       * @description Printful Catalog Variant ID that this Sync Variant is synced to
       * @example 3001
       */
      catalog_variant_id?: number;
      /**
       * @description The retail price of this item. Using the store currency.
       * @example 29.99
       */
      retail_price?: string | null;
      /**
       * @description Currency in which prices are returned
       * @example USD
       */
      currency?: string;
      /**
       * @description If is set to true, indicates the Sync Variant has been marked as ignored by Printful for order imports. This also means that Printful will not handle the stock for Shopify stores that have marked this Sync Variant as ignored.
       * @example false
       */
      is_ignored?: boolean;
      /**
       * @description SKU of this Sync Variant
       * @example SKU1234
       */
      sku?: string | null;
      product_options?: components["schemas"]["ProductOptions"];
      placements?: components["schemas"]["SyncVariantDesignPlacement"][];
      _links?: components["schemas"]["SyncVariantLinks"];
    };
    /**
     * Sync variants links
     * @description HATEOAS links
     */
    SyncVariantsLinks: {
      self?: {
        /**
         * @description Link to same resource
         * @example https://api.printful.com/v2/sync-products/1000/sync-variants?&offset=20
         */
        href?: string;
      };
      next?: {
        /**
         * @description Link to the next page
         * @example https://api.printful.com/v2/sync-products/1000/sync-variants?offset=40
         */
        href?: string;
      };
      previous?: {
        /**
         * @description Link to the previous page
         * @example https://api.printful.com/v2/sync-products/1000/sync-variants?offset=0
         */
        href?: string;
      };
      first?: {
        /**
         * @description Link to first page
         * @example https://api.printful.com/v2/sync-products/1000/sync-variants?offset=0
         */
        href?: string;
      };
      last?: {
        /**
         * @description Link to the last page
         * @example https://api.printful.com/v2/sync-products/1000/sync-variants?offset=300
         */
        href?: string;
      };
    };
    /**
     * Mockup
     * @description Result of mockup generator tasks.
     */
    Mockup: {
      /**
       * @description Placement name for which the mockup was generated
       * @example front
       */
      placement?: string;
      /**
       * @description This is a name that can be displayed to end customers.
       * @example Front Print
       */
      display_name?: string;
      /**
       * @description Technique name for which the mockup was generated
       * @example dtg
       */
      technique?: string;
      /**
       * @description Mockup style identifier. Available mockup styles can be found under _[Retrieve catalog product mockup styles](#operation/retrieveMockupStylesByProductId)_.
       * @example 1
       */
      style_id?: number;
      /**
       * @description Temporary URL to generated mockup image. Image will be removed from the hosting after a day so make sure to persist a copy if needed.
       * @example https://printful-upload.s3-accelerate.amazonaws.com/tmp/9c711aabb422cd386da3cb41735069f3/unisex-staple-t-shirt-white-front-659e8b94763bc.png
       */
      mockup_url?: string;
    };
    HeaderSource: {
      /**
       * @description Name of the header which is incorrect
       * @example X-PF-Language
       */
      header?: string;
    };
    ParameterSource: {
      /**
       * @description Name of the URL query parameter that is incorrect
       * @example limit
       */
      parameter?: string;
    };
    PointerSource: {
      /**
       * @description Pointer to an invalid value in request body
       * @example /order_items/0/placements
       */
      pointer?: string;
    };
    /** Error */
    readonly Error: {
      /**
       * @description a URI that uniquely identifies the validation rule that failed. If it’s a URL, it should point to an explanation of the constraint in the documentation.
       * @example https://developers.printful.com/docs/v2/errors#specific-validation-error
       */
      readonly type?: string;
      /**
       * @description A human-readable explanation of the error
       * @example Parameter `xyz` was incorrect
       */
      readonly detail?: string;
      /** @description Source of the value that caused the issue */
      readonly source?: components["schemas"]["HeaderSource"] | components["schemas"]["ParameterSource"] | components["schemas"]["PointerSource"];
      /** @description List of valid values that could be used instead to avoid the error */
      readonly valid_values?: string[];
    };
    /**
     * MockupGeneratorTask
     * @description Result of mockup generator task
     */
    MockupGeneratorTask: {
      /**
       * @description Unique task identifier used to check status of the task and retrieve the results once the task is ready.
       * @example 597350033
       */
      id?: number;
      /**
       * @description Task status:
       *  * `completed` – Mockup Generator task was successfully processed
       *  * `pending` – Mockup Generator task is still being processed
       *  * `failed` – Mockup Generator task failed
       *
       * @enum {string}
       */
      status?: "completed" | "pending" | "failed";
      /** @description A list of mockups grouped by variant. Note that the same list of mockups can appear under multiple variants, this happens in cases where the variants have the same mockups, for example if the only difference is the size of the variant. */
      catalog_variant_mockups?: {
          /**
           * @description ID of a catalog variant for which the mockup was generated.
           * @example 4011
           */
          catalog_variant_id?: number;
          /** @description List of generated mockups */
          mockups?: components["schemas"]["Mockup"][];
        }[];
      failure_reasons?: components["schemas"]["Error"][];
      /** @description HATEOAS links */
      _links?: {
        /**
         * HateoasLink
         * @description Link to the Generator Task details
         * @example {
         *   "href": "https://api.printful.com/v2/mockup-tasks?id=597350033"
         * }
         */
        readonly self?: components["schemas"]["HateoasLink"];
      };
    };
    BaseMockupProduct: {
      /**
       * @description Mockup product source
       * @example catalog
       */
      source?: string;
      /**
       * @description Used to specify style of mockups that should be generated. For example:
       *   * On the hanger
       *   * On the Male/Female model
       *   * Flat on the table
       *   * etc.
       * Available mockup styles for catalog product can be found under _[Retrieve catalog product mockup styles](#operation/retrieveMockupStylesByProductId)_.
       */
      mockup_style_ids?: number[];
    };
    CatalogMockupProduct: components["schemas"]["BaseMockupProduct"] & ({
      /**
       * @description Catalog product identifier
       * @example 71
       */
      catalog_product_id?: number;
      /** @description List of catalog variant identifiers for which mockups will be generated. Variants must belong to the catalog product specified with `catalog_product_id`. Multiple variants of the same color do not count towards the daily number of files limit. Meaning that for a Red T-Shirt of (S,M) sizes we still generate only one mockup. */
      catalog_variant_ids?: unknown[];
      /**
       * @description Define orientation of the product (used in case of e.g. canvas). Vertical by default. For products without orientation this parameter is ignored.
       * @enum {string|null}
       */
      orientation?: "vertical" | "horizontal" | null;
      /** @description Data used to specify on how the product should look like on the mockups. */
      placements?: components["schemas"]["Placement"][];
      product_options?: components["schemas"]["ProductOptions"];
    });
    TemplateMockupProduct: components["schemas"]["BaseMockupProduct"] & {
      /**
       * @description Mockup product source
       * @example template
       */
      source?: string;
      /**
       * @description Product Template identifier
       * @example 712152512
       */
      product_template_id?: number;
      /** @description List of catalog variant identifiers for which mockups will be generated. Variants must be defined in the product template specified with `product_template_id`. Multiple variants of the same color do not count towards the daily number of files limit. Meaning that for a Red T-Shirt of (S,M) sizes we still generate only one mockup. */
      catalog_variant_ids?: number[];
      /**
       * @description Used to specify style of mockups that should be generated. For example:
       *   * On the hanger
       *   * On the Male/Female model
       *   * Flat on the table
       *   * etc.
       * Available mockup styles for catalog product can be found under _[Retrieve catalog product mockup styles](#operation/retrieveMockupStylesByProductId)_.
       */
      mockup_style_ids?: number[];
    };
    MockupTaskCreation: {
      /**
       * @description Generated file format. PNG will have a transparent background, JPG will have a smaller file size.
       * @enum {string}
       */
      format?: "jpg" | "png";
      products?: (components["schemas"]["CatalogMockupProduct"] | components["schemas"]["TemplateMockupProduct"])[];
    };
    Response200: {
      /**
       * @description Response status code `200`
       * @example 200
       */
      code?: number;
    };
    /** ProductData */
    ProductData: {
      /**
       * @description Product ID.
       * @example 1
       */
      id?: number;
    };
    /** ProductsParam */
    ProductsParam: {
      /**
       * @description Param name.
       * @example products
       * @enum {string}
       */
      name?: "products";
      /**
       * @description Param value - list of product data.
       * @example [
       *   {
       *     "id": 1
       *   },
       *   {
       *     "id": 71
       *   }
       * ]
       */
      value?: components["schemas"]["ProductData"][];
    };
    /** EventConfiguration */
    EventConfiguration: {
      /**
       * @description Event type.
       * @example shipment_sent
       */
      type?: string;
      /**
       * @description Webhook URL (HTTPS-only) that will receive the event notifications.
       * @example ​https://www.example.com/printful/webhook
       */
      url?: string | null;
      /**
       * @example [
       *   {
       *     "name": "products",
       *     "value": [
       *       {
       *         "id": 1
       *       },
       *       {
       *         "id": 71
       *       }
       *     ]
       *   }
       * ]
       */
      params?: components["schemas"]["ProductsParam"][] | null;
    };
    /** WebhookInfo */
    WebhookInfo: {
      /**
       * @description Webhook URL (HTTPS-only) that will receive store's event notifications if no URL is set for the event.
       * @example ​https://www.example.com/printful/webhook
       */
      default_url?: string | null;
      /** @description A Unix timestamp indicating when the configuration should expire. The default value is `null` meaning it won't expire. */
      expires_at?: number | null;
      /**
       * @description Array of enabled webhook event configurations
       * @example [
       *   {
       *     "type": "shipment_sent",
       *     "url": "​https://www.example.com/printful/webhook/shipment_sent"
       *   },
       *   {
       *     "type": "catalog_stock_updated",
       *     "params": [
       *       {
       *         "name": "products",
       *         "value": [
       *           {
       *             "id": 1
       *           },
       *           {
       *             "id": 71
       *           }
       *         ]
       *       }
       *     ]
       *   }
       * ]
       */
      events?: components["schemas"]["EventConfiguration"][];
      /**
       * @description Public key used to identify the specific settings.
       * @example SbF/9d/uWguI
       */
      public_key?: string;
    };
    /** WebhookInfo */
    WebhookCreated: components["schemas"]["WebhookInfo"] & {
      /**
       * @description Secret key used to generate and verify the event signature. Visible only once upon configuration set-up.
       * @example a01376f30766acf7f706cc84beb57b79f9779e4a3e79d5519b3a9069c2156807098aw1d2abb43d356e03a46e71eeb9ab4519b3774d993abde8a3fabcebeb30fe
       */
      secret_key?: string;
    };
    Webhook: {
      /** @description Event type */
      type?: string;
      /**
       * @description Event time
       * @example 1622456737
       */
      occurred_at?: number;
      /**
       * @description Number of previous attempts to deliver this webhook event
       * @example 2
       */
      retries?: number;
      /**
       * @description ID of the store that the event occurred to
       * @example 12
       */
      store_id?: number;
    };
    /** WebhookShipmentData */
    WebhookShipmentData: {
      /** @description Shipment's ID */
      id?: number;
      /** @description Shipment's status */
      status?: string;
      /** @description ID of the store associated with the shipment */
      store_id?: number;
      /** @description The tracking code associated with the shipment */
      tracking_number?: string;
      /**
       * @description Unix timestamp of when the shipment was created
       * @example 1679401746
       */
      created_at?: number;
      /**
       * @description Ship date (`Y-m-d`)
       * @example 2023-03-21
       */
      ship_date?: string;
      /**
       * @description Unix timestamp of when the shipment was sent
       * @example 1679405672
       */
      shipped_at?: number;
      /**
       * @description Whether this is a reshipment
       * @example false
       */
      reshipment?: boolean;
    };
    /** WebhookOrderData */
    WebhookOrderData: {
      /** @description Order's ID */
      id?: number;
      /** @description Order's External ID */
      external_id?: string;
      /** @description Order's status */
      status?: string;
      /** @description ID of the store associated with the order */
      store_id?: number;
      /** @description The URL to view the order in Printful dashboard */
      dashboard_url?: string;
      /** @description Unix timestamp of when the order was created */
      created_at?: number;
      /** @description Unix timestamp of when the latest order's update */
      updated_at?: number;
    };
    /** WebhookSyncProductData */
    WebhookSyncProductData: {
      /** @description Sync Product's ID */
      id?: number;
      /** @description Sync Product's External ID */
      external_id?: string;
      /** @description Sync Product's name */
      name?: string;
    };
    /** ApprovalSheetWebhookFile */
    ApprovalSheetWebhookFile: {
      /** @example a14e51714be01f98487fcf5131727d31 */
      confirm_hash?: string;
      /** @example https://s3.staging.printful.com/upload/approval-design/ae/ae7b3d3e965c238b3e5c1a4e15696f07_l */
      submitted_design?: string;
      /** @example https://s3.staging.printful.com/upload/approval-design/aa/aaf9e1c6b32cb7a2c04d2746108d4124_l */
      recommended_design?: string;
      /** @example https://www.printful.test/dashboard/order/download-approval-sheet-pdf?confirmationHash=13aa35854bfc67a85b7ce231aef2ae8 */
      approval_sheet?: string;
    };
  };
  responses: {
    /** @description OK */
    GetProducts: {
      content: {
        "application/json": {
          data?: components["schemas"]["ProductInfo"][];
          paging?: components["schemas"]["Paging"];
          _links?: components["schemas"]["ProductsLinks"];
        };
      };
    };
    /** @description Unauthorized */
    Unauthorized: {
      content: {
        "application/json": {
          /**
           * @description Response status code `401`
           * @example 401
           */
          code?: number;
          /**
           * @description Actual error message
           * @example Malformed Authorization header.
           */
          result?: string;
          error?: {
            /** @example BadRequest */
            reason?: string;
            /** @example Malformed Authorization header. */
            message?: string;
          };
        };
      };
    };
    /** @description Server Error */
    ServerError: {
      content: {
        "application/json": components["schemas"]["ServerErrorDetails"];
      };
    };
    /** @description OK */
    GetProductById: {
      content: {
        "application/json": {
          data?: components["schemas"]["ProductInfo"];
        };
      };
    };
    /** @description OK */
    GetVariantById: {
      content: {
        "application/json": {
          /** VariantInfo */
          data?: components["schemas"]["Variant"];
          /** @description HATEOAS links */
          _links?: {
            /**
             * HateoasLink
             * @description Link to same resource
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-variants/100"
             * }
             */
            self?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link all variants associated with this variants product
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71/catalog-variants"
             * }
             */
            product_variants?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link product data associated with this variant
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71"
             * }
             */
            product_details?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to variant prices
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-variants/4011/prices"
             * }
             */
            variant_prices?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to variant images
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-variant/4011/images"
             * }
             */
            variant_images?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to variant stock availability endpoint
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-variants/4011/availability"
             * }
             */
            availability?: components["schemas"]["HateoasLink"];
          };
        };
      };
    };
    /** @description OK */
    GetProductVariantsById: {
      content: {
        "application/json": {
          /** Variant */
          data?: components["schemas"]["Variant"][];
          paging?: components["schemas"]["Paging"];
          /** @description HATEOAS links */
          _links?: {
            /**
             * HateoasLink
             * @description Link to the same resource
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71/catalog-variants?limit=20&offset=40"
             * }
             */
            self?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the next page (absent if the current page is the last one or if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71/catalog-variants?limit=20&offset=60"
             * }
             */
            next?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the previous page (absent if the current page is the first one or if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71/catalog-variants?limit=20&offset=20"
             * }
             */
            previous?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the first page (absent if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71/catalog-variants?limit=20"
             * }
             */
            first?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the last page (absent if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71/catalog-variants?limit=20&offset=100"
             * }
             */
            last?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the product details
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71"
             * }
             */
            product_details?: components["schemas"]["HateoasLink"];
          };
        };
      };
    };
    /** @description OK */
    GetCategories: {
      content: {
        "application/json": {
          data?: components["schemas"]["Category"][];
          /** @description HATEOAS links */
          _links?: {
            /**
             * HateoasLink
             * @description Link to same resource
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-categories?limit=20&offset=0"
             * }
             */
            self?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the next page (absent if the current page is the last one or if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-categories?limit=20&offset=20"
             * }
             */
            next?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the previous page (absent if the current page is the first one or if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-categories?limit=20&offset=40"
             * }
             */
            previous?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the first page (absent if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-categories?limit=20"
             * }
             */
            first?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the last page (absent if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-categories?limit=20&offset=90"
             * }
             */
            last?: components["schemas"]["HateoasLink"];
          };
        };
      };
    };
    /** @description OK */
    GetCategoryById: {
      content: {
        "application/json": {
          data?: components["schemas"]["Category"];
          /** @description HATEOAS links */
          _links?: {
            /**
             * HateoasLink
             * @description Link to all catalog categories
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-categories"
             * }
             */
            all_categories?: components["schemas"]["HateoasLink"];
          };
        };
      };
    };
    /** @description OK */
    GetCategoriesByProductId: {
      content: {
        "application/json": {
          data?: components["schemas"]["Category"][];
          paging?: components["schemas"]["Paging"];
          /** @description HATEOAS links */
          _links?: {
            /**
             * HateoasLink
             * @description Link to same resource
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71/catalog-categories?limit=20&offset=40"
             * }
             */
            self?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the next page (absent if the current page is the last one or if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71/catalog-categories?limit=20&offset=60"
             * }
             */
            next?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the previous page (absent if the current page is the first one or if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71/catalog-categories?limit=20&offset=20"
             * }
             */
            previous?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the first page (absent if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71/catalog-categories?limit=20"
             * }
             */
            first?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the last page (absent if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71/catalog-categories?limit=20&offset=100"
             * }
             */
            last?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to all catalog categories
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-categories"
             * }
             */
            all_categories?: components["schemas"]["HateoasLink"];
          };
        };
      };
    };
    /** @description OK */
    GetProductSizeGuideById: {
      content: {
        "application/json": {
          data?: components["schemas"]["ProductSizeGuide"];
          /** @description HATEOAS links */
          _links?: {
            /**
             * @description Link to same resource
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71/sizes"
             * }
             */
            self?: components["schemas"]["HateoasLink"];
            /**
             * @description Link to the catalog product
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71"
             * }
             */
            product_details?: components["schemas"]["HateoasLink"];
          };
        };
      };
    };
    /** @description Not found */
    NotFound: {
      content: {
        "application/json": {
          /**
           * @description Response status code `404`
           * @example 404
           */
          code?: number;
          /**
           * @description Actual error message
           * @example Not found
           */
          result?: string;
          error?: {
            /** @example NotFound */
            reason?: string;
            /** @example Not found */
            message?: string;
          };
        };
      };
    };
    /** @description OK */
    GetProductPricesById: {
      content: {
        "application/json": {
          data?: components["schemas"]["ProductPrices"];
          paging?: components["schemas"]["Paging"];
          /** @description HATEOAS links */
          _links?: {
            /**
             * HateoasLink
             * @description Link to the same resource
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71/prices?limit=10&offset=0"
             * }
             */
            self?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the next page (absent if the current page is the last one or if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71/prices?limit=10&offset=30"
             * }
             */
            next?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the previous page (absent if the current page is the first one or if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71/prices?limit=10&limit=10"
             * }
             */
            previous?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the first page (absent if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71/prices?limit=10"
             * }
             */
            first?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the last page (absent if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71/prices?limit=10&offset=90"
             * }
             */
            last?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to product details
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71"
             * }
             */
            product_details?: components["schemas"]["HateoasLink"];
          };
        };
      };
    };
    /** @description OK */
    GetVariantPricesById: {
      content: {
        "application/json": {
          data?: components["schemas"]["VariantPrices"];
          /** @description HATEOAS links */
          _links?: {
            /**
             * HateoasLink
             * @description Link to the same resource
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-variants/4011/prices"
             * }
             */
            self?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to product prices
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71/prices"
             * }
             */
            product_prices?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to product details
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71"
             * }
             */
            product_details?: components["schemas"]["HateoasLink"];
          };
        };
      };
    };
    /** @description OK */
    GetProductImagesById: {
      content: {
        "application/json": {
          data?: components["schemas"]["VariantImages"][];
          paging?: components["schemas"]["Paging"];
          /** @description HATEOAS links */
          _links?: {
            /**
             * @description Link to same resource
             * @example {
             *   "href": "https://api.printful.com/v2/catalog/products/71/images"
             * }
             */
            self?: components["schemas"]["HateoasLink"];
            product_details?: components["schemas"]["HateoasLink"];
          };
        };
      };
    };
    /** @description OK */
    GetVariantImagesById: {
      content: {
        "application/json": {
          data?: components["schemas"]["VariantImages"][];
          /** @description HATEOAS links */
          _links?: {
            self?: components["schemas"]["HateoasLink"];
            variant_details?: components["schemas"]["HateoasLink"];
            product_details?: components["schemas"]["HateoasLink"];
          };
        };
      };
    };
    /** @description OK */
    GetCatalogProductMockupsStyles: {
      content: {
        "application/json": {
          data?: components["schemas"]["MockupStyles"][];
          paging?: components["schemas"]["Paging"];
          /** @description HATEOAS links */
          _links?: {
            /**
             * HateoasLink
             * @description Link to the same resource
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71/mockup-styles?limit=20&offset=40"
             * }
             */
            self?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the next page (absent if the current page is the last one or if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71/mockup-styles?limit=20&offset=60"
             * }
             */
            next?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the previous page (absent if the current page is the first one or if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71/mockup-styles?limit=20&offset=20"
             * }
             */
            previous?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the first page (absent if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71/mockup-styles?limit=20"
             * }
             */
            first?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the last page (absent if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71/mockup-styles?limit=20&offset=100"
             * }
             */
            last?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the Catalog Product
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71"
             * }
             */
            product?: components["schemas"]["HateoasLink"];
          };
        };
      };
    };
    /** @description Unauthorized */
    "Unauthorized-2": {
      content: {
        "application/json": {
          /**
           * @description Actual error message
           * @example Malformed Authorization header
           */
          data?: string;
          error?: {
            /** @example BadRequest */
            reason?: string;
            /** @example Malformed Authorization header */
            message?: string;
          };
        };
      };
    };
    /** @description Not found */
    "NotFound-2": {
      content: {
        "application/json": {
          /**
           * @description Actual error message
           * @example Not found
           */
          data?: string;
          error?: {
            /** @example NotFound */
            reason?: string;
            /** @example Not found */
            message?: string;
          };
        };
      };
    };
    /** @description OK */
    GetCatalogProductMockupsTemplates: {
      content: {
        "application/json": {
          data?: components["schemas"]["MockupTemplates"][];
          paging?: components["schemas"]["Paging"];
          /** @description HATEOAS links */
          _links?: {
            /**
             * HateoasLink
             * @description Link to the same resource
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71/mockup-templates?limit=20&offset=40"
             * }
             */
            self?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the next page (absent if the current page is the last one or if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71/mockup-templates?limit=20&offset=60"
             * }
             */
            next?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the previous page (absent if the current page is the first one or if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71/mockup-templates?limit=20&offset=20"
             * }
             */
            previous?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the first page (absent if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71/mockup-templates?limit=20"
             * }
             */
            first?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the last page (absent if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71/mockup-templates?limit=20&offset=100"
             * }
             */
            last?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the Catalog Product
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-products/71"
             * }
             */
            product?: components["schemas"]["HateoasLink"];
          };
        };
      };
    };
    /** @description OK */
    GetProductStockAvailabilityById: {
      content: {
        "application/json": {
          data?: components["schemas"]["VariantStockAvailability"][];
          paging?: components["schemas"]["Paging"];
          filter_settings?: components["schemas"]["FilterSettings"];
          /** @description HATEOAS links */
          _links?: {
            /**
             * HateoasLink
             * @description Link to the same resource
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-product/71/availability?limit=20&offset=40"
             * }
             */
            self?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the next page (absent if the current page is the last one or if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-product/71/availability?limit=20&offset=60"
             * }
             */
            next?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the previous page (absent if the current page is the first one or if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-product/71/availability?limit=20&offset=20"
             * }
             */
            previous?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the first page (absent if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-product/71/availability?limit=20"
             * }
             */
            first?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the last page (absent if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-product/71/availability?limit=20&offset=100"
             * }
             */
            last?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the catalog product details
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-product/71"
             * }
             */
            product?: components["schemas"]["HateoasLink"];
          };
        };
      };
    };
    /** @description Bad Request */
    BadRequest: {
      content: {
        "application/json": {
          /**
           * @description Response status code `400`
           * @example 400
           */
          code?: number;
          /**
           * @description Actual error message
           * @example Missing required parameters
           */
          result?: string;
          error?: {
            /** @example BadRequest */
            reason?: string;
            /** @example Missing required parameters */
            message?: string;
          };
        };
      };
    };
    /** @description Forbidden */
    Forbidden: {
      content: {
        "application/json": {
          /**
           * @description Response status code `403`
           * @example 403
           */
          code?: number;
          /**
           * @description Actual error message
           * @example This endpoint requires Oauth authentication!.
           */
          result?: string;
          error?: {
            /** @example 403 */
            reason?: number;
            /** @example This endpoint requires Oauth authentication!. */
            message?: string;
          };
        };
      };
    };
    /** @description OK */
    GetVariantStockAvailabilityById: {
      content: {
        "application/json": {
          data?: components["schemas"]["VariantStockAvailability"];
          filter_settings?: components["schemas"]["FilterSettings"];
          /** @description HATEOAS links */
          _links?: {
            /**
             * HateoasLink
             * @description Link to the same resource
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-variants/4011/availability"
             * }
             */
            self?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the catalog variant details
             * @example {
             *   "href": "https://api.printful.com/v2/catalog-variants/4011"
             * }
             */
            variant?: components["schemas"]["HateoasLink"];
          };
        };
      };
    };
    /** @description OK */
    GetOrders: {
      content: {
        "application/json": {
          data?: components["schemas"]["OrderSummary"][];
          paging?: components["schemas"]["Paging"];
          /** @description HATEOAS links */
          _links?: {
            /**
             * HateoasLink
             * @description Link to same resource
             * @example {
             *   "href": "https://api.printful.com/v2/orders?limit=10&offset=20"
             * }
             */
            self?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the next page (absent if the current page is the last one or if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/orders?limit=10&offset=30"
             * }
             */
            next?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the previous page (absent if the current page is the first one or if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/orders?limit=10&limit=10"
             * }
             */
            previous?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the first page (absent if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/orders?limit=10"
             * }
             */
            first?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the last page (absent if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/orders?limit=10&offset=90"
             * }
             */
            last?: components["schemas"]["HateoasLink"];
          };
        };
      };
    };
    /** @description OK */
    GetOrderById: {
      content: {
        "application/json": {
          data?: components["schemas"]["Order"];
        };
      };
    };
    /** @description No Content */
    NoContent: {
      content: never;
    };
    /** @description Conflict */
    Conflict: {
      content: {
        "application/json": {
          /**
           * @description Response status code `409`
           * @example 409
           */
          code?: number;
          /**
           * @description An error message describing a conflict between the request and the current state of the resource.
           * @example Attempting to update a resource that is already being updated. Please try again after the previous update has completed
           */
          result?: string;
          error?: {
            /** @example 409 */
            reason?: number;
            /** @example Attempting to update a resource that is already being updated. Please try again after the previous update has completed */
            message?: string;
          };
        };
      };
    };
    /** @description OK */
    ConfirmOrderById: {
      content: {
        "application/json": {
          data?: components["schemas"]["Order"];
          /** @description HATEOAS links */
          _links?: {
            /**
             * HateoasLink
             * @description Link to the order details
             * @example {
             *   "href": "https://api.printful.com/v2/orders/123/confirmation"
             * }
             */
            self?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to order
             * @example {
             *   "href": "https://api.printful.com/v2/orders/123"
             * }
             */
            order?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to all order items associated with the order
             * @example {
             *   "href": "https://api.printful.com/v2/orders/123/order-items"
             * }
             */
            order_items?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the shipments associated with the order
             * @example {
             *   "href": "https://api.printful.com/v2/orders/123/shipments"
             * }
             */
            shipments?: components["schemas"]["HateoasLink"];
          };
        };
      };
    };
    /** @description OK */
    GetOrderItemsById: {
      content: {
        "application/json": {
          data?: (components["schemas"]["CatalogItem"] | components["schemas"]["WarehouseItem"] | components["schemas"]["SyncItem"])[];
          /** @description HATEOAS links */
          _links?: {
            /**
             * HateoasLink
             * @description Link to same resource
             * @example {
             *   "href": "https://api.printful.com/v2/orders/123/order-items?limit=10&offset=20"
             * }
             */
            self?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the next page (absent if the current page is the last one or if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/orders/123/order-items?limit=10&offset=30"
             * }
             */
            next?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the previous page (absent if the current page is the first one or if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/orders/123/order-items?limit=10&limit=10"
             * }
             */
            previous?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the first page (absent if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/orders/123/order-items?limit=10"
             * }
             */
            first?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the last page (absent if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/orders/123/order-items?limit=10&offset=90"
             * }
             */
            last?: components["schemas"]["HateoasLink"];
            order?: components["schemas"]["HateoasLink"];
          };
        };
      };
    };
    /** @description OK */
    GetItemById: {
      content: {
        "application/json": {
          data?: components["schemas"]["CatalogItem"] | components["schemas"]["WarehouseItem"] | components["schemas"]["SyncItem"];
          /** @description HATEOAS links */
          _links?: {
            self?: components["schemas"]["HateoasLink"];
            order?: components["schemas"]["HateoasLink"];
            all_items?: components["schemas"]["HateoasLink"];
            shipments?: components["schemas"]["HateoasLink"];
          };
        };
      };
    };
    /** @description OK */
    GetShipments: {
      content: {
        "application/json": {
          data?: components["schemas"]["Shipment"][];
          _links?: {
            self?: {
              /** @example ​https://api.printful.com/v2/orders/123/shipments?limit=20&offset=0 */
              href?: string;
            };
            next?: {
              /** @example ​https://api.printful.com/v2/orders/123/shipments?limit=20&offset=20 */
              href?: string;
            };
            previous?: {
              /** @example ​https://api.printful.com/v2/orders/123/shipments?limit=20&offset=0 */
              href?: string;
            };
            first?: {
              /** @example ​https://api.printful.com/v2/orders/123/shipments?limit=20&offset=0 */
              href?: string;
            };
            last?: {
              /** @example ​https://api.printful.com/v2/orders/123/shipments?limit=20&offset=20 */
              href?: string;
            };
          };
          paging?: components["schemas"]["Paging"];
        };
      };
    };
    /** @description OK */
    GetMockupGeneratorTasks: {
      content: {
        "application/json": {
          data?: components["schemas"]["MockupGeneratorTask"][];
          paging?: components["schemas"]["Paging"];
          /** @description HATEOAS links */
          _links?: {
            /**
             * HateoasLink
             * @description Link to the same resource
             * @example {
             *   "href": "https://api.printful.com/v2/mockup-tasks?id=1,2,3,4,5,6,7,8,9,10&limit=5"
             * }
             */
            self?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the next page (absent if the current page is the last one or if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/mockup-tasks?limit=5&offset=60"
             * }
             */
            next?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the previous page (absent if the current page is the first one or if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/mockup-tasks?limit=5&offset=20"
             * }
             */
            previous?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the first page (absent if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/mockup-tasks?limit=5"
             * }
             */
            first?: components["schemas"]["HateoasLink"];
            /**
             * HateoasLink
             * @description Link to the last page (absent if there is only one page)
             * @example {
             *   "href": "https://api.printful.com/v2/mockup-tasks?limit=5&offset=100"
             * }
             */
            last?: components["schemas"]["HateoasLink"];
          };
        };
      };
    };
    /** @description OK */
    CreateMockupGeneratorTasks: {
      content: {
        "application/json": {
          data?: components["schemas"]["MockupGeneratorTask"][];
          /** @description HATEOAS links */
          _links?: {
            /**
             * HateoasLink
             * @description Link to the result of the mockups
             * @example {
             *   "href": "https://api.printful.com/v2/mockup-tasks?id=1,2,3"
             * }
             */
            self?: components["schemas"]["HateoasLink"];
          };
        };
      };
    };
    /** @description OK */
    WebhookInfo: {
      content: {
        "application/json": components["schemas"]["Response200"] & {
          result?: components["schemas"]["WebhookInfo"];
        };
      };
    };
    /** @description OK */
    WebhookCreated: {
      content: {
        "application/json": components["schemas"]["Response200"] & {
          result?: components["schemas"]["WebhookCreated"];
        };
      };
    };
    /** @description OK */
    EventInfo: {
      content: {
        "application/json": components["schemas"]["Response200"] & {
          result?: components["schemas"]["EventConfiguration"];
        };
      };
    };
  };
  parameters: {
    /**
     * @description One or more category IDs to return only products in those categories. The IDs can be found in the response of the
     * operation _[Get Categories](#operation/getCategories)_.
     */
    ProductCategoryIds?: number[];
    /** @description One or more color names to return only products with variants of one the those colors. */
    ColorsFilter?: string[];
    /** @description The number of products to return per page. */
    Limit?: number;
    /** @description If true only new Products will be returned. */
    NewFilter?: boolean;
    /**
     * @description The number of products to not include in the response starting from the beginning of the list.
     *
     * This can be used to return products after the initial 100. For example, sending offset 100
     */
    Offset?: number;
    /** @description One or more identifiers of a placement to return only products with variants that have that placement. The complete list of placements can be found [here](https://developers.printful.com/docs/#section/Placements). */
    PlacementsFilter?: string[];
    /** @description Only returns the products that can be sold in the specified region. */
    SellingRegion?: "worldwide" | "north_america" | "canada" | "europe" | "spain" | "latvia" | "uk" | "france" | "australia" | "japan" | "new_zealand" | "italy" | "brazil" | "southeast_asia" | "republic_of_korea" | "english_speaking_regions";
    /**
     * @description This parameter only is used if sort_type is also present and it changes the order of the returned products.
     * The exact meaning varies depending on the value of `sort_type`:
     * * `sort_type=new`
     *   * ascending sorts from newest to oldest.
     *   * descending sorts from oldest to newest.
     * * `sort_type=rating`
     * 	* ascending from lowest to highest rated.
     * 	* descending from highest to lowest rated.
     * * `sort_type=price`
     * 	* ascending from lowest to highest price.
     * 	* descending from highest to lowest price.
     */
    SortDirection?: "ascending" | "descending";
    /** @description The sorting strategy to use when sorting the result. When it's not present, no specific order is guaranteed. */
    SortType?: "new" | "rating" | "price";
    /** @description One or more techniques to return only products with variants that can be printed using one of the techniques. */
    TechniquesFilter?: components["schemas"]["TechniqueEnum"][];
    /** @description Product ID. */
    ProductId: number;
    /** @description Variant ID */
    VariantId: number;
    /** @description Category ID */
    CategoryId: number;
    /**
     * @description A comma-separated list of measurement unit in which size tables are to be returned (`inches` or `cm`).
     * The default value is determined based on the locale country. The inches are used for United States, Liberia
     * and Myanmar, for other countries the unit defaults to centimeters.
     */
    MeasurementUnit?: string;
    /** @description Specifies the region production currency that the product prices will be calculated in */
    SellingRegionPrice?: string;
    /** @description The currency (3-letter code) used to determine currency in which the prices will be displayed. The store currency will be used by default. The format is compliant with ISO 4217 standard. */
    Currency?: string;
    /** @description String values separated by comma. You can specify multiple option groups filters. */
    OptionGroup?: string;
    /** @description String values separated by comma. You can specify multiple variant colors filters. */
    VariantColor?: string;
    /** @description Filters result by specified placement */
    Placement?: string;
    /** @description One or more placement idenitifiers used to filter in mockup styles that match a given placement. The complete list of placements can be found [here](https://developers.printful.com/docs/#section/Placements). */
    MockupPlacementsFilter?: string[];
    /** @description Result set offset */
    "Offset-2"?: number;
    /** @description Number of items per page (max 100) */
    "Limit-2"?: number;
    /** @description Only returns the products that can be sold in the specified region. */
    SellingRegionAll?: "all" | "worldwide" | "north_america" | "canada" | "europe" | "spain" | "latvia" | "uk" | "france" | "australia" | "japan" | "new_zealand" | "italy" | "brazil" | "southeast_asia" | "republic_of_korea" | "english_speaking_regions";
    /** @description Order ID (integer) or Order External ID (string prepended with "@" symbol) */
    OrderId: number | string;
    /** @description Type of items returned (order_item, branding_item). By default all items are returned. */
    Type?: string;
    /** @description Item ID (integer) or Item External ID (string prepended with "@" symbol) */
    ItemId: number | string;
    /**
     * @description Use this to specify which store you want to use (required only for account level token).
     *
     * The store IDs can be retrieved with the [Get basic information about stores](/docs/#operation/getStores) endpoint.
     */
    StoreId?: string;
    /** @description Sync Product ID (integer) or External ID (if prefixed with @) */
    SyncProductPathId: number | string;
    /** @description Sync Variant ID (integer) or External ID (if prefixed with @) */
    SyncVariantPathId: number | string;
    /** @description One or more mockup generator task IDs to return only specified tasks. The IDs can be found in the response of the operation _[Create mockup generator tasks](#operation/createMockupGeneratorTasks)_. */
    MockupGeneratorIds: string[];
    /** @description If this parameter is passed with value `true`, expired settings will be returned instead of a 404 warning. */
    ShowExpired?: boolean;
    /** @description Event type */
    EventType: string;
  };
  requestBodies: {
    /** @description POST request body */
    OrderInput?: {
      content: {
        "application/json": {
          /**
           * @description Order ID from the external system
           * @example 4235234213
           */
          external_id?: string;
          /**
           * @description Shipping method. Defaults to 'STANDARD'
           * @example STANDARD
           */
          shipping?: string;
          /**
           * Address
           * @description The recipient data.
           */
          recipient: components["schemas"]["Address"];
          /** @description Array of order items */
          order_items: (components["schemas"]["CatalogItem"] | components["schemas"]["SyncItem"])[];
          customization?: components["schemas"]["Customization"];
          /** @description Retail costs */
          retail_costs?: {
            /**
             * @description The code of the currency in which the retail costs are returned.
             * @example EUR
             */
            currency?: string;
            /**
             * @description Discount sum.
             * @example 123.40
             */
            discount?: string;
            /**
             * @description Shipping costs.
             * @example 123.40
             */
            shipping?: string;
            /**
             * @description Sum of taxes (not included in the item price).
             * @example 123.40
             */
            tax?: string;
          };
        };
      };
    };
    /** @description PATCH request body */
    OrderPatchInput?: {
      content: {
        "application/json": {
          /**
           * @description Order ID from the external system
           * @example 4235234213
           */
          external_id?: string;
          /**
           * @description Shipping method. Defaults to 'STANDARD'
           * @example STANDARD
           */
          shipping?: string;
          /**
           * Address
           * @description The recipient data.
           */
          recipient?: components["schemas"]["Address"];
          /** @description Array of order items */
          order_items?: (components["schemas"]["CatalogItem"] | components["schemas"]["SyncItem"])[];
          customization?: components["schemas"]["Customization"];
          /** @description Retail costs */
          retail_costs?: {
            /**
             * @description The code of the currency in which the retail costs are returned.
             * @example EUR
             */
            currency?: string;
            /**
             * @description Discount sum.
             * @example 123.40
             */
            discount?: string;
            /**
             * @description Shipping costs.
             * @example 123.40
             */
            shipping?: string;
            /**
             * @description Sum of taxes (not included in the item price).
             * @example 123.40
             */
            tax?: string;
          };
        };
      };
    };
    /** @description POST request body */
    ItemInput: {
      content: {
        "application/json": components["schemas"]["CatalogItem"] | components["schemas"]["SyncItem"];
      };
    };
    /** @description PATCH request body */
    ItemPatchInput: {
      content: {
        "application/json": components["schemas"]["CatalogItem"] | components["schemas"]["SyncItem"];
      };
    };
    /** @description POST request body */
    SyncProductCreate: {
      content: {
        "application/json": {
          sync_product: components["schemas"]["SyncProductCreationData"];
          /** @description Information about the Sync Variants to be created within the Sync Product */
          sync_variants: components["schemas"]["SyncVariantFromCatalog"][];
        };
      };
    };
    /** @description PATCH request body */
    SyncProductUpdate?: {
      content: {
        "application/json": {
          sync_product?: components["schemas"]["SyncProductUpdateData"];
          /** @description Information about the Sync Variants to be created within the Sync Product */
          sync_variants?: components["schemas"]["SyncVariantFromCatalog"][];
        };
      };
    };
    /** @description POST request body */
    SyncVariantCreate?: {
      content: {
        "application/json": components["schemas"]["SyncVariantFromCatalog"];
      };
    };
    /** @description PATCH request body */
    SyncVariantUpdate?: {
      content: {
        "application/json": {
          /**
           * @description Your own identifier for the Sync Variant. It must be unique across all Sync Variants in the store.
           *
           * The external ID must not contain whitespace, 4-byte Unicode characters, and following characters: `,`, `@`.
           *
           * If the external ID is not provided in the request, we will generate a 14-character hexadecimal ID.
           *
           * @example external-1234
           */
          external_id?: string;
          /**
           * @description Retail price of this sync variant. Must be a numeric string with a value greater than 0. Has a precision of 2 decimal places.
           * @example 10.50
           */
          retail_price?: string;
          /**
           * @description SKU of product variant
           * @example some-sku-12
           */
          sku?: string;
          product_options?: components["schemas"]["ProductOptions"];
          placements?: components["schemas"]["PlacementRequest"][];
        };
      };
    };
    /** @description This action schedules asynchronous mockup generation tasks. In the response of this request `id` will be returned which can be used to retrieve the result of the tasks _[Retrieve mockup generator tasks](#operation/getMockupGeneratorTasks)_. In addition, the webhook event will be sent informing about the task completion, if the correct webhook has been subscribed to _[Mockup generator task finished event](#operation/mockupTaskFinished)_. You can subscribe to webhook events by using _[Set up event configuration](#operation/createWebhookEventConfiguration)_. */
    CreateMockupGeneratorTasks?: {
      content: {
        "application/json": components["schemas"]["MockupTaskCreation"];
      };
    };
    /** @description POST request body */
    CreateWebhook: {
      content: {
        "application/json": components["schemas"]["WebhookInfo"];
      };
    };
    /** @description POST request body */
    CreateWebhookEvent: {
      content: {
        "application/json": components["schemas"]["EventConfiguration"];
      };
    };
    /** @description Shipment sent. */
    ShipmentSent?: {
      content: {
        "application/json": components["schemas"]["Webhook"] & {
          /**
           * @description Event type - `shipment_sent`
           * @enum {string}
           */
          type?: "shipment_sent";
          /**
           * ShipmentInfo
           * @description Shipment and order data
           */
          data?: {
            shipment?: components["schemas"]["WebhookShipmentData"];
            order?: components["schemas"]["WebhookOrderData"];
          };
        };
      };
    };
    /** @description Shipment returned. */
    ShipmentReturned?: {
      content: {
        "application/json": components["schemas"]["Webhook"] & {
          /**
           * @description Event type - `shipment_returned`
           * @enum {string}
           */
          type?: "shipment_returned";
          /**
           * ReturnInfo
           * @description Shipment and order data
           */
          data?: {
            /** @description Reason why the shipment was returned. */
            reason?: string;
            shipment?: components["schemas"]["WebhookShipmentData"];
            order?: components["schemas"]["WebhookOrderData"];
          };
        };
      };
    };
    /** @description Order created. */
    OrderCreated?: {
      content: {
        "application/json": components["schemas"]["Webhook"] & {
          /**
           * @description Event type - `order_created`
           * @example order_created
           */
          type?: string;
          /**
           * CreateInfo
           * @description Created order data
           */
          data?: {
            order?: components["schemas"]["WebhookOrderData"];
          };
        };
      };
    };
    /** @description Order updated. */
    OrderUpdated?: {
      content: {
        "application/json": components["schemas"]["Webhook"] & {
          /**
           * @description Event type - `order_updated`
           * @example order_updated
           */
          type?: string;
          /**
           * UpdateInfo
           * @description Updated order data
           */
          data?: {
            order?: components["schemas"]["WebhookOrderData"];
          };
        };
      };
    };
    /** @description Order failed. */
    OrderFailed?: {
      content: {
        "application/json": components["schemas"]["Webhook"] & {
          /**
           * @description Event type - `order_failed`
           * @example order_failed
           */
          type?: string;
          /**
           * FailureInfo
           * @description Failure reason and order data
           */
          data?: {
            /** @description Reason why the order has failed. */
            reason?: string;
            order?: components["schemas"]["WebhookOrderData"];
          };
        };
      };
    };
    /** @description Order canceled. */
    OrderCanceled?: {
      content: {
        "application/json": components["schemas"]["Webhook"] & {
          /**
           * @description Event type - `order_canceled`
           * @example order_canceled
           */
          type?: string;
          /**
           * CancelInfo
           * @description Cancel reason and order data
           */
          data?: {
            /** @description Reason why the order has been canceled. */
            reason?: string;
            order?: components["schemas"]["WebhookOrderData"];
          };
        };
      };
    };
    /** @description Product synced. */
    ProductSynced?: {
      content: {
        "application/json": components["schemas"]["Webhook"] & {
          /**
           * @description Event type - `product_synced`
           * @example product_synced
           */
          type?: string;
          /** SyncInfo */
          data?: {
            sync_product?: components["schemas"]["WebhookSyncProductData"];
          };
        };
      };
    };
    /** @description Product updated. */
    ProductUpdated?: {
      content: {
        "application/json": components["schemas"]["Webhook"] & {
          /**
           * @description Event type - `product_updated`
           * @example product_updated
           */
          type?: string;
          /** SyncInfo */
          data?: {
            sync_product?: components["schemas"]["WebhookSyncProductData"];
          };
        };
      };
    };
    /** @description Product deleted. */
    ProductDeleted?: {
      content: {
        "application/json": components["schemas"]["Webhook"] & {
          /**
           * @description Event type - `product_deleted`
           * @example product_deleted
           */
          type?: string;
          /** SyncInfo */
          data?: {
            sync_product?: components["schemas"]["WebhookSyncProductData"];
          };
        };
      };
    };
    /** @description Catalog stock updated. */
    CatalogStockUpdated?: {
      content: {
        "application/json": components["schemas"]["Webhook"] & ({
          /**
           * @description Event type - `catalog_stock_updated`
           * @example catalog_stock_updated
           * @enum {string}
           */
          type?: "catalog_stock_updated";
          /** ChangedAvailabilities */
          data?: ({
              /**
               * @description Product ID
               * @example 71
               */
              catalog_product_id?: number;
              /**
               * @description Variant ID
               * @example 4011
               */
              catalog_variant_id?: number;
              /** @description Technique list. */
              techniques?: string[];
              /**
               * @description Availability status.
               * @enum {string}
               */
              availability?: "in stock" | "on demand" | "out of stock" | "not fulfilled" | "discontinued" | "unknown";
            })[];
        });
      };
    };
    /** @description Catalog price changed. */
    CatalogPriceChanged?: {
      content: {
        "application/json": components["schemas"]["Webhook"] & {
          /**
           * @description Event type - `catalog_price_changed`
           * @enum {string}
           */
          type?: "catalog_price_changed";
          /**
           * ProductPriceChangedInfo
           * @description Information about products which catalog product prices changed
           */
          data?: {
            /**
             * @description List of catalog product IDs which prices has changed
             * @example [
             *   71
             * ]
             */
            catalog_product_ids?: unknown[];
          };
        };
      };
    };
    /** @description Order put on hold. */
    OrderPutHold?: {
      content: {
        "application/json": components["schemas"]["Webhook"] & {
          /**
           * @description Event type - `order_put_hold`
           * @example order_put_hold
           */
          type?: string;
          /** OrderStatusChange */
          data?: {
            /** @description Reason why the order status was changed. */
            reason?: string;
            order?: components["schemas"]["WebhookOrderData"];
          };
        };
      };
    };
    /** @description Order put on hold because it needs customer approval. You will receive an approval sheet with suggested changes and a confirmation hash so you can approve the changes if you agree with them. */
    OrderHoldApproval?: {
      content: {
        "application/json": components["schemas"]["Webhook"] & {
          /**
           * @description Event type - `order_put_hold_approval`
           * @example order_put_hold_approval
           */
          type?: string;
          /** OrderRequiresApproval */
          data?: {
            /** @description Reason why the order was put on hold and requires approval. */
            reason?: string;
            approval_files?: components["schemas"]["ApprovalSheetWebhookFile"][];
            order?: components["schemas"]["WebhookOrderData"];
          };
        };
      };
    };
    /** @description Order removed from on hold. */
    OrderRemoveHold?: {
      content: {
        "application/json": components["schemas"]["Webhook"] & {
          /**
           * @description Event type - `order_remove_hold`
           * @example order_remove_hold
           */
          type?: string;
          /** OrderStatusChange */
          data?: {
            /** @description Reason why the order status was changed. */
            reason?: string;
            order?: components["schemas"]["WebhookOrderData"];
          };
        };
      };
    };
    /** @description Mockup task finished processing. */
    MockupTaskFinished?: {
      content: {
        "application/json": components["schemas"]["Webhook"] & {
          /**
           * @description Event type – `mockup_task_finished`
           * @enum {string}
           */
          type?: "mockup_task_finished";
          data?: components["schemas"]["MockupGeneratorTask"];
        };
      };
    };
  };
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * Retrieve a list of catalog products
   * @description This endpoint retrieves a list of the products available in Printful's catalog. The list is paginated and can be filtered using various filters. The information returned includes details on how each product can be designed, such as the available placements, techniques, and additional options.
   * For a visual representation of the design data, please see the following diagram:
   * [<img src="images/catalog/design_data_diagram.png#center" width="700"/>](images/catalog/design_data_diagram.png)
   */
  getProducts: {
    parameters: {
      query?: {
        category_ids?: components["parameters"]["ProductCategoryIds"];
        colors?: components["parameters"]["ColorsFilter"];
        limit?: components["parameters"]["Limit"];
        new?: components["parameters"]["NewFilter"];
        offset?: components["parameters"]["Offset"];
        placements?: components["parameters"]["PlacementsFilter"];
        selling_region_name?: components["parameters"]["SellingRegion"];
        sort_direction?: components["parameters"]["SortDirection"];
        sort_type?: components["parameters"]["SortType"];
        techniques?: components["parameters"]["TechniquesFilter"];
      };
    };
    responses: {
      200: components["responses"]["GetProducts"];
      401: components["responses"]["Unauthorized"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Retrieve a single catalog product
   * @description Returns information about a single specified catalog product. [See catalog product](#tag/Catalog-v2/What-is-a-catalog-product)
   */
  getProductById: {
    parameters: {
      query?: {
        selling_region_name?: components["parameters"]["SellingRegion"];
      };
      path: {
        id: components["parameters"]["ProductId"];
      };
    };
    responses: {
      200: components["responses"]["GetProductById"];
      401: components["responses"]["Unauthorized"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Retrieve information about specific catalog variant
   * @description Returns information about single specified catalog variant. [See catalog variant](#tag/Catalog-v2/What-is-a-catalog-variant)
   */
  getVariantById: {
    parameters: {
      path: {
        id: components["parameters"]["VariantId"];
      };
    };
    responses: {
      200: components["responses"]["GetVariantById"];
      401: components["responses"]["Unauthorized"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Retrieve information about catalog product variants
   * @description Returns information about all catalog variants associated with the specified
   * catalog product. [See catalog variant](#tag/Catalog-v2/What-is-a-catalog-variant)
   */
  getProductVariantsById: {
    parameters: {
      path: {
        id: components["parameters"]["ProductId"];
      };
    };
    responses: {
      200: components["responses"]["GetProductVariantsById"];
      401: components["responses"]["Unauthorized"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Retrieve a list of catalog categories
   * @description Returns list of all categories that are present in the catalog. The categories specify the type of the product that is associated with it. For example, the category "Men’s T-shirts" indicates that the product is a subgroup of T-shirts specifically targeted at Men.
   * Categories can be used to filter the product list by specific tags [See categories_ids](#operation/getProducts)
   */
  getCategories: {
    responses: {
      200: components["responses"]["GetCategories"];
      401: components["responses"]["Unauthorized"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Retrieve information about specific category
   * @description Returns information about a specific catalog category. The categories specify the type of the product that is associated with it. For example, the category "Men’s T-shirts" indicates that the product is a subgroup of T-shirts specifically targeted at Men.
   * Categories can be used to filter the product list by specific tags [See categories_ids](#operation/getProducts)
   */
  getCategoryById: {
    parameters: {
      path: {
        id: components["parameters"]["CategoryId"];
      };
    };
    responses: {
      200: components["responses"]["GetCategoryById"];
      401: components["responses"]["Unauthorized"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Retrieve a list of catalog product categories
   * @description To retrieve information about a particular category, use this feature. It returns details about a specific catalog category. Categories help identify the type of product associated with them. For instance, the category "Men's T-shirts" denotes that the product is a subgroup of T-shirts intended for men.
   */
  getCategoriesByProductId: {
    parameters: {
      path: {
        id: components["parameters"]["ProductId"];
      };
    };
    responses: {
      200: components["responses"]["GetCategoriesByProductId"];
      401: components["responses"]["Unauthorized"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Retrieve size guide for a catalog product
   * @description Returns information about the size guide for a specific product.
   */
  getProductSizeGuideById: {
    parameters: {
      query?: {
        unit?: components["parameters"]["MeasurementUnit"];
      };
      path: {
        id: components["parameters"]["ProductId"];
      };
    };
    responses: {
      200: components["responses"]["GetProductSizeGuideById"];
      404: components["responses"]["NotFound"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Retrieve catalog product prices
   * @description Calculates prices for specific catalog product based on selling region and specified currency. Calculations also include Store discounts. Selling region is used to specify product production currency, that is the price that the product is natively manufactured in. Different selling regions might affect the overall price amount. Currency parameter is used only to define the currency that the prices will be displayed in.
   */
  getProductPricesById: {
    parameters: {
      query?: {
        selling_region_name?: components["parameters"]["SellingRegionPrice"];
        currency?: components["parameters"]["Currency"];
      };
      path: {
        id: components["parameters"]["ProductId"];
      };
    };
    responses: {
      200: components["responses"]["GetProductPricesById"];
      404: components["responses"]["NotFound"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Retrieve pricing information for the catalog variant
   * @description Return pricing information from a single variant and the parent product
   */
  getVariantPricesById: {
    parameters: {
      query?: {
        selling_region_name?: components["parameters"]["SellingRegionPrice"];
        currency?: components["parameters"]["Currency"];
      };
      path: {
        id: components["parameters"]["VariantId"];
      };
    };
    responses: {
      200: components["responses"]["GetVariantPricesById"];
      404: components["responses"]["NotFound"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Retrieve blank images for a catalog product
   * @description This feature helps to fetch blank images for a catalog product. These blank images are always white and semi-transparent and can be colored by the user on the client-side as per the specified color in the `data.color` field. The endpoint allows filtering of the result based on the type of the mockup, the placement, and the color of the product.
   */
  getProductImagesById: {
    parameters: {
      query?: {
        option_group?: components["parameters"]["OptionGroup"];
        colors?: components["parameters"]["VariantColor"];
        placement?: components["parameters"]["Placement"];
      };
      path: {
        id: components["parameters"]["ProductId"];
      };
    };
    responses: {
      200: components["responses"]["GetProductImagesById"];
      401: components["responses"]["Unauthorized"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Retrieve blank images for a catalog variant
   * @description Returns images for a specified Variant.
   */
  getVariantImagesById: {
    parameters: {
      query?: {
        option_group?: components["parameters"]["OptionGroup"];
        placement?: components["parameters"]["Placement"];
      };
      path: {
        id: components["parameters"]["VariantId"];
      };
    };
    responses: {
      200: components["responses"]["GetVariantImagesById"];
      401: components["responses"]["Unauthorized"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Retrieve catalog product mockup styles
   * @description Returns information about available mockup styles for specified catalog product.
   */
  retrieveMockupStylesByProductId: {
    parameters: {
      query?: {
        placements?: components["parameters"]["MockupPlacementsFilter"];
        selling_region_name?: components["parameters"]["SellingRegion"];
        offset?: components["parameters"]["Offset-2"];
        limit?: components["parameters"]["Limit-2"];
      };
      path: {
        id: components["parameters"]["ProductId"];
      };
    };
    responses: {
      200: components["responses"]["GetCatalogProductMockupsStyles"];
      401: components["responses"]["Unauthorized-2"];
      404: components["responses"]["NotFound-2"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Retrieve catalog product mockup templates
   * @description Returns positional data for specified catalog product mockups. The data from this endpoint could be used
   * to generate your own mockups without the need to use Printful's mockup generator.
   * ![Mockup template](images/mockups/mockup_template.png)
   */
  getMockupTemplatesByProductId: {
    parameters: {
      query?: {
        placements?: components["parameters"]["PlacementsFilter"];
        selling_region_name?: components["parameters"]["SellingRegion"];
        limit?: components["parameters"]["Limit"];
        offset?: components["parameters"]["Offset"];
      };
      path: {
        id: components["parameters"]["ProductId"];
      };
    };
    responses: {
      200: components["responses"]["GetCatalogProductMockupsTemplates"];
      401: components["responses"]["Unauthorized"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Retrieve catalog product stock availability
   * @description Provides information about the catalog product stock status. Stock availability is grouped by variants &rarr; techniques &rarr; selling regions.
   */
  getProductStockAvailabilityById: {
    parameters: {
      query?: {
        techniques?: components["parameters"]["TechniquesFilter"];
        selling_region_name?: components["parameters"]["SellingRegionAll"];
        limit?: components["parameters"]["Limit"];
        offset?: components["parameters"]["Offset"];
      };
      path: {
        id: components["parameters"]["ProductId"];
      };
    };
    responses: {
      200: components["responses"]["GetProductStockAvailabilityById"];
      400: components["responses"]["BadRequest"];
      401: components["responses"]["Unauthorized"];
      403: components["responses"]["Forbidden"];
      404: components["responses"]["NotFound"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Retrieve catalog variant stock availability
   * @description Provides information about the catalog variant stock status. Stock availability is grouped by variants &rarr; techniques &rarr; selling regions.
   */
  getVariantStockAvailabilityById: {
    parameters: {
      query?: {
        techniques?: components["parameters"]["TechniquesFilter"];
        selling_region_name?: components["parameters"]["SellingRegion"];
      };
      path: {
        id: components["parameters"]["VariantId"];
      };
    };
    responses: {
      200: components["responses"]["GetVariantStockAvailabilityById"];
      400: components["responses"]["BadRequest"];
      401: components["responses"]["Unauthorized"];
      403: components["responses"]["Forbidden"];
      404: components["responses"]["NotFound"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Get Orders
   * @description Returns paginated Order list
   */
  getOrders: {
    parameters: {
      query?: {
        offset?: components["parameters"]["Offset-2"];
        limit?: components["parameters"]["Limit-2"];
      };
    };
    responses: {
      200: components["responses"]["GetOrders"];
      401: components["responses"]["Unauthorized"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Create Order
   * @description Creates a new order
   */
  createOrder: {
    requestBody: components["requestBodies"]["OrderInput"];
    responses: {
      200: components["responses"]["GetOrderById"];
      400: components["responses"]["BadRequest"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Get Order
   * @description Returns Order
   */
  getOrder: {
    parameters: {
      path: {
        order_id: components["parameters"]["OrderId"];
      };
    };
    responses: {
      200: components["responses"]["GetOrderById"];
      401: components["responses"]["Unauthorized"];
      404: components["responses"]["NotFound"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Delete Order
   * @description <div class="alert alert-danger">
   *   <strong>Warning:</strong> The DELETE HTTP method in version 2 of order in the
   *   API will delete the order if the order can be deleted. This is distinct from
   *   version 1 where the DELETE method will actually cancel the order rather than
   *   delete it. Please, keep this in mind if you are migrating to version 2 from
   *   version 1
   * </div>
   *
   * Delete the order if it can be deleted. An order can be deleted if it's status is
   * `draft`, `failed` or `cancelled`. The order must also have not been charged yet
   * and there must be no payments pending.
   */
  deleteOrder: {
    parameters: {
      path: {
        order_id: components["parameters"]["OrderId"];
      };
    };
    responses: {
      204: components["responses"]["NoContent"];
      401: components["responses"]["Unauthorized"];
      404: components["responses"]["NotFound"];
      409: components["responses"]["Conflict"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Update Order
   * @description Make a partial update of an order.
   */
  updateOrder: {
    parameters: {
      path: {
        order_id: components["parameters"]["OrderId"];
      };
    };
    requestBody: components["requestBodies"]["OrderPatchInput"];
    responses: {
      200: components["responses"]["GetOrderById"];
      400: components["responses"]["BadRequest"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Confirm order
   * @description Confirms and returns Order. Orders with pending calculations cannot be confirmed.
   */
  confirmOrder: {
    parameters: {
      path: {
        order_id: components["parameters"]["OrderId"];
      };
    };
    responses: {
      200: components["responses"]["ConfirmOrderById"];
      401: components["responses"]["Unauthorized"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Get Order Items
   * @description Returns Order items
   */
  getItemsByOrderId: {
    parameters: {
      query?: {
        type?: components["parameters"]["Type"];
      };
      path: {
        order_id: components["parameters"]["OrderId"];
      };
    };
    responses: {
      200: components["responses"]["GetOrderItemsById"];
      400: components["responses"]["BadRequest"];
      401: components["responses"]["Unauthorized"];
      403: components["responses"]["Forbidden"];
      404: components["responses"]["NotFound"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Create Order Item
   * @description Creates Item for Order
   */
  createItemByOrderId: {
    parameters: {
      path: {
        order_id: components["parameters"]["OrderId"];
      };
    };
    requestBody: components["requestBodies"]["ItemInput"];
    responses: {
      200: components["responses"]["GetOrderItemsById"];
      400: components["responses"]["BadRequest"];
      401: components["responses"]["Unauthorized"];
      403: components["responses"]["Forbidden"];
      404: components["responses"]["NotFound"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Get Order Item
   * @description Returns Order item
   */
  getItemById: {
    parameters: {
      path: {
        order_item_id: components["parameters"]["ItemId"];
        order_id: components["parameters"]["OrderId"];
      };
    };
    responses: {
      200: components["responses"]["GetItemById"];
      401: components["responses"]["Unauthorized"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Delete Order Item
   * @description Remove a single item from the order
   */
  deleteItemById: {
    parameters: {
      header?: {
        "X-PF-Store-Id"?: components["parameters"]["StoreId"];
      };
      path: {
        order_item_id: components["parameters"]["ItemId"];
        order_id: components["parameters"]["OrderId"];
      };
    };
    responses: {
      204: components["responses"]["NoContent"];
      400: components["responses"]["BadRequest"];
      401: components["responses"]["Unauthorized"];
      403: components["responses"]["Forbidden"];
      404: components["responses"]["NotFound"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Update Order Item
   * @description Make a partial update of an order item. NOTE that the source of the order item can't be changed via a PATCH request, to create an order item from another source you must delete the current one and add a new one.
   */
  updateItem: {
    parameters: {
      path: {
        order_item_id: components["parameters"]["ItemId"];
        order_id: components["parameters"]["OrderId"];
      };
    };
    requestBody: components["requestBodies"]["ItemPatchInput"];
    responses: {
      200: components["responses"]["GetOrderItemsById"];
      400: components["responses"]["BadRequest"];
      401: components["responses"]["Unauthorized"];
      403: components["responses"]["Forbidden"];
      404: components["responses"]["NotFound"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Get Shipments
   * @description Shipments contain information about how and when your orders items will be delivered and fulfilled
   */
  getShipments: {
    parameters: {
      query?: {
        offset?: components["parameters"]["Offset-2"];
        limit?: components["parameters"]["Limit-2"];
      };
      path: {
        order_id: components["parameters"]["OrderId"];
      };
    };
    responses: {
      200: components["responses"]["GetShipments"];
      401: components["responses"]["Unauthorized"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Get Sync Products
   * @description Get information about all Sync Products of your store.
   */
  getSyncProducts: {
    parameters: {
      query?: {
        offset?: components["parameters"]["Offset-2"];
        limit?: components["parameters"]["Limit-2"];
      };
      header?: {
        "X-PF-Store-Id"?: components["parameters"]["StoreId"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            data?: components["schemas"]["SyncProductResponse"][];
            _links?: components["schemas"]["SyncProductsLinks"];
            paging?: components["schemas"]["Paging"];
          };
        };
      };
      401: components["responses"]["Unauthorized-2"];
      404: components["responses"]["NotFound-2"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Create a Sync Product
   * @description Creates a new Sync Product.
   *
   * <div class="alert alert-danger">
   *   This endpoint is only available for "Manual order platform / API" stores (store type <code>native</code>).
   * </div>
   */
  createSyncProduct: {
    parameters: {
      header?: {
        "X-PF-Store-Id"?: components["parameters"]["StoreId"];
      };
    };
    requestBody: components["requestBodies"]["SyncProductCreate"];
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            data?: components["schemas"]["SyncProductResponse"];
          };
        };
      };
      400: components["responses"]["BadRequest"];
      401: components["responses"]["Unauthorized-2"];
    };
  };
  /**
   * Get a Sync Product
   * @description Get information about a single Sync Product.
   */
  getSyncProductById: {
    parameters: {
      header?: {
        "X-PF-Store-Id"?: components["parameters"]["StoreId"];
      };
      path: {
        sync_product_id: components["parameters"]["SyncProductPathId"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            data?: components["schemas"]["SyncProductResponse"];
          };
        };
      };
      401: components["responses"]["Unauthorized-2"];
      404: components["responses"]["NotFound-2"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Delete a Sync Product
   * @description Deletes a single Sync Product.
   */
  deleteSyncProductById: {
    parameters: {
      header?: {
        "X-PF-Store-Id"?: components["parameters"]["StoreId"];
      };
      path: {
        sync_product_id: components["parameters"]["SyncProductPathId"];
      };
    };
    responses: {
      204: components["responses"]["NoContent"];
      401: components["responses"]["Unauthorized-2"];
      404: components["responses"]["NotFound-2"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Update a Sync Product
   * @description Make a partial update of a Sync Product. This endpoint allows you to replace all Sync Variants with new ones. If you want to update one or more Sync Variants, [Update a Sync Variant](#tag/Sync-v2/operation/updateSyncVariantInSyncProductById) endpoint should be used instead.
   */
  updateSyncSyncProductById: {
    parameters: {
      header?: {
        "X-PF-Store-Id"?: components["parameters"]["StoreId"];
      };
      path: {
        sync_product_id: components["parameters"]["SyncProductPathId"];
      };
    };
    requestBody: components["requestBodies"]["SyncProductUpdate"];
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            data?: components["schemas"]["SyncProductResponse"];
          };
        };
      };
      400: components["responses"]["BadRequest"];
      401: components["responses"]["Unauthorized-2"];
      404: components["responses"]["NotFound-2"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Get a Sync Variant
   * @description Get information about a single Sync Variant.
   */
  getSyncVariantById: {
    parameters: {
      header?: {
        "X-PF-Store-Id"?: components["parameters"]["StoreId"];
      };
      path: {
        sync_variant_id: components["parameters"]["SyncVariantPathId"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            data?: components["schemas"]["SyncVariant"];
          };
        };
      };
      401: components["responses"]["Unauthorized-2"];
      404: components["responses"]["NotFound-2"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Get Sync Variants
   * @description Get information about all the sync variants of a specific sync product.
   */
  getSyncProductVariants: {
    parameters: {
      query?: {
        offset?: components["parameters"]["Offset-2"];
        limit?: components["parameters"]["Limit-2"];
      };
      header?: {
        "X-PF-Store-Id"?: components["parameters"]["StoreId"];
      };
      path: {
        sync_product_id: components["parameters"]["SyncProductPathId"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            data?: components["schemas"]["SyncVariant"][];
            _links?: components["schemas"]["SyncVariantsLinks"];
            paging?: components["schemas"]["Paging"];
          };
        };
      };
      401: components["responses"]["Unauthorized-2"];
      404: components["responses"]["NotFound-2"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Create a Sync Variant
   * @description Creates a new Sync Variant for an existing Sync Product
   */
  createSyncVariant: {
    parameters: {
      header?: {
        "X-PF-Store-Id"?: components["parameters"]["StoreId"];
      };
      path: {
        sync_product_id: components["parameters"]["SyncProductPathId"];
      };
    };
    requestBody: components["requestBodies"]["SyncVariantCreate"];
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            data?: components["schemas"]["SyncVariant"];
          };
        };
      };
      400: components["responses"]["BadRequest"];
      401: components["responses"]["Unauthorized-2"];
      404: components["responses"]["NotFound-2"];
    };
  };
  /**
   * Delete a Sync Variant
   * @description Delete a single Sync Variant.
   */
  deleteSyncVariantInSyncProductById: {
    parameters: {
      header?: {
        "X-PF-Store-Id"?: components["parameters"]["StoreId"];
      };
      path: {
        sync_product_id: components["parameters"]["SyncProductPathId"];
        sync_variant_id: components["parameters"]["SyncVariantPathId"];
      };
    };
    responses: {
      204: components["responses"]["NoContent"];
      401: components["responses"]["Unauthorized-2"];
      404: components["responses"]["NotFound-2"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Update a Sync Variant
   * @description Make a partial update of a Sync Variant. NOTE that the source of the Sync Variant can't be changed via a PATCH request, to create a Sync Variant from another source you must delete the current one and add a new one.
   */
  updateSyncVariantInSyncProductById: {
    parameters: {
      header?: {
        "X-PF-Store-Id"?: components["parameters"]["StoreId"];
      };
      path: {
        sync_product_id: components["parameters"]["SyncProductPathId"];
        sync_variant_id: components["parameters"]["SyncVariantPathId"];
      };
    };
    requestBody: components["requestBodies"]["SyncVariantUpdate"];
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            data?: components["schemas"]["SyncVariant"];
          };
        };
      };
      400: components["responses"]["BadRequest"];
      401: components["responses"]["Unauthorized-2"];
      404: components["responses"]["NotFound-2"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Retrieve Mockup Generator tasks
   * @description Returns result of Mockup Generator tasks
   */
  getMockupGeneratorTasks: {
    parameters: {
      query: {
        id: components["parameters"]["MockupGeneratorIds"];
        limit?: components["parameters"]["Limit"];
        offset?: components["parameters"]["Offset"];
      };
    };
    responses: {
      200: components["responses"]["GetMockupGeneratorTasks"];
      400: components["responses"]["BadRequest"];
      401: components["responses"]["Unauthorized"];
      404: components["responses"]["NotFound"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Create Mockup Generator tasks
   * @description Create Mockup Generator tasks
   */
  createMockupGeneratorTasks: {
    parameters: {
      header?: {
        "X-PF-Store-Id"?: components["parameters"]["StoreId"];
      };
    };
    requestBody: components["requestBodies"]["CreateMockupGeneratorTasks"];
    responses: {
      200: components["responses"]["CreateMockupGeneratorTasks"];
      400: components["responses"]["BadRequest"];
      401: components["responses"]["Unauthorized"];
      404: components["responses"]["NotFound"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Get webhook configuration
   * @description Returns a configured webhook URL and a list of webhook event types enabled for the store
   */
  getWebhooks: {
    parameters: {
      query?: {
        show_expired?: components["parameters"]["ShowExpired"];
      };
      header?: {
        "X-PF-Store-Id"?: components["parameters"]["StoreId"];
      };
    };
    responses: {
      200: components["responses"]["WebhookInfo"];
      401: components["responses"]["Unauthorized"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Set up webhook configuration
   * @description Use this endpoint to enable a webhook URL for a store and select webhook event types that will be sent to this URL.
   *
   * Note that only one webhook configuration can be active for each private OAuth token or app, calling this method will disable the previous webhook configuration.
   *
   * Setting up the [Catalog stock updated](#operation/catalogStockUpdated) webhook requires passing products (currently only IDs are taken into account).
   *
   * Stock update webhook will only include information for the products specified in the `products` param.
   */
  createWebhook: {
    parameters: {
      header?: {
        "X-PF-Store-Id"?: components["parameters"]["StoreId"];
      };
    };
    requestBody: components["requestBodies"]["CreateWebhook"];
    responses: {
      200: components["responses"]["WebhookCreated"];
      400: components["responses"]["BadRequest"];
      401: components["responses"]["Unauthorized"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Disable webhook support
   * @description Removes the webhook URL and all event types from the store.
   */
  disableWebhook: {
    parameters: {
      header?: {
        "X-PF-Store-Id"?: components["parameters"]["StoreId"];
      };
    };
    responses: {
      204: components["responses"]["NoContent"];
      401: components["responses"]["Unauthorized"];
      404: components["responses"]["NotFound"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Get event configuration
   * @description Returns event configuration for store
   */
  getWebhookEventConfiguration: {
    parameters: {
      query?: {
        show_expired?: components["parameters"]["ShowExpired"];
      };
      header?: {
        "X-PF-Store-Id"?: components["parameters"]["StoreId"];
      };
      path: {
        eventType: components["parameters"]["EventType"];
      };
    };
    responses: {
      200: components["responses"]["EventInfo"];
      401: components["responses"]["Unauthorized"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Set up event configuration
   * @description Use this endpoint to create or replace specific event configuration for a store.
   *
   * Setting up the [Catalog stock updated](#operation/catalogStockUpdated) webhook requires passing products (currently only IDs are taken into account).
   *
   * Stock update webhook will only include information for the products specified in the `products` param.
   */
  createWebhookEventConfiguration: {
    parameters: {
      header?: {
        "X-PF-Store-Id"?: components["parameters"]["StoreId"];
      };
      path: {
        eventType: components["parameters"]["EventType"];
      };
    };
    requestBody: components["requestBodies"]["CreateWebhookEvent"];
    responses: {
      200: components["responses"]["EventInfo"];
      400: components["responses"]["BadRequest"];
      401: components["responses"]["Unauthorized"];
      "5XX": components["responses"]["ServerError"];
    };
  };
  /**
   * Disable support for event
   * @description Disables the event for a store and clears its configuration, leaving other webhooks intact.
   */
  disableWebhookEvent: {
    parameters: {
      header?: {
        "X-PF-Store-Id"?: components["parameters"]["StoreId"];
      };
      path: {
        eventType: components["parameters"]["EventType"];
      };
    };
    responses: {
      204: components["responses"]["NoContent"];
      401: components["responses"]["Unauthorized"];
      404: components["responses"]["NotFound"];
      "5XX": components["responses"]["ServerError"];
    };
  };
}
